<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testHs</title>
    <description>我想回馈iOS开发这个大社区，所以我决定写博客。 写的不好，还请见谅。
</description>
    <link>http://walkginkgo.com/</link>
    <atom:link href="http://walkginkgo.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 26 May 2016 15:29:33 +0800</pubDate>
    <lastBuildDate>Thu, 26 May 2016 15:29:33 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>从0开始学习 GitHub 系列之「寻找代码」</title>
        <description>&lt;p&gt;张哥在写Github系列，看到了想帮张哥分担一下。正好工作室的学弟学妹们也需要会这个，就正好写个博客了。&lt;/p&gt;

&lt;p&gt;因为我是iOS开发出生..所以我就从iOS的角度来写怎么用，不过放心，Android没有什么大的差别，我们后台的学弟都是这么干的！&lt;/p&gt;

&lt;p&gt;看完张哥的文章，大概已经明白了Github是怎么使用的。但我想大部分人是想用Github里面的三方库，想去看看别人的开源项目的源代码，想去看看最近有没有什么新的牛逼的代码。但是怎么去找到这些东西呢。我想介绍的就是这方面的东西。&lt;/p&gt;

&lt;h2 id=&quot;exploretrending&quot;&gt;看Explore和Trending&lt;/h2&gt;

&lt;p&gt;大部分人的Github顶部栏可能是这样的…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-1.png&quot; alt=&quot;github-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但我的是这样的…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-2.png&quot; alt=&quot;github-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;看到差别了吗？右上角我的比你们多了一个Explore…记得我大二的时候Github改版，把Explore去掉了，当时好像骂声一片。有人开发了一款插件。&lt;a href=&quot;https://chrome.google.com/webstore/detail/github-menu-back/mcobennfgmfddjmiikfamhhhiibcjbik?utm_source=chrome-ntp-icon&quot;&gt;Github Menu Back&lt;/a&gt;说白了这玩意就是在你的Github顶部栏加上Explore，然后把你的头像放左边。足以见到Explore的重要性（不过这玩意得网站加载差不多才能出来..）。当然了要是不愿意用这个，可以点击头像，里面也有。如下图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-3.png&quot; alt=&quot;github-3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们点击一个看看。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-4.png&quot; alt=&quot;github-4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;进去之后左上角有四个选项。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-5.png&quot; alt=&quot;github-5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一个一个介绍哈。&lt;/p&gt;

&lt;h3 id=&quot;showcases&quot;&gt;第一个  Showcases&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-6.png&quot; alt=&quot;github-6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第一个其实就是这个界面，点过去没啥区别。&lt;/p&gt;

&lt;p&gt;就是按照某个方面，比如Package managers（其实就是三方库的管理器）。点进去里面都是某门语言的包管理器，比如iOS的cocoapods，前端的npm，vim的vundle。类比到Android里面应该就是Gradle了。不过这里应该没有Gradle..&lt;/p&gt;

&lt;p&gt;比如还有web application frameworks，其实就是后台框架，肯定有rails的。&lt;/p&gt;

&lt;p&gt;具体我就不介绍了。可以点进去看。在最下面有More showcases。&lt;/p&gt;

&lt;h3 id=&quot;integrations&quot;&gt;第二个  Integrations&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-7.png&quot; alt=&quot;github-7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Powerful integrations that help you and your team build software better, together.&lt;/p&gt;

&lt;p&gt;其实就是一些工具的整合，可以更好的开发。&lt;/p&gt;

&lt;p&gt;点进去里面有很多工具，比如Travis ci，这个现在用的很多，还有Github自家的编辑器Atom等等。&lt;/p&gt;

&lt;p&gt;这个得自己发掘了..不多介绍。&lt;/p&gt;

&lt;h3 id=&quot;stars&quot;&gt;第四个  Stars。&lt;/h3&gt;

&lt;p&gt;为啥跳第三个？因为第三个是重点…重要的放最后。&lt;/p&gt;

&lt;p&gt;点Stars就会进入你Star过的项目里啦。具体的查找方法我后面会介绍的。就不截图了。&lt;/p&gt;

&lt;h3 id=&quot;trending&quot;&gt;第三个  Trending。&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-8.png&quot; alt=&quot;github-8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;好像有人曾经在知乎问过，程序员无聊的时候干什么。结果下面有人说，我逛Github能逛一上午…自从我发现Trending之后，我发现我也可以！&lt;/p&gt;

&lt;p&gt;Trending说白了，就是某个时间段里Github上被star数量最多的项目和仓库被star数量最多的开发者！&lt;/p&gt;

&lt;p&gt;我要一点一点仔细的介绍这个！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-9.png&quot; alt=&quot;github-9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;首先是左上角的。&lt;/p&gt;

&lt;p&gt;这两个，是切换仓库和开发者的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-10.png&quot; alt=&quot;github-10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里是切换时间的，可以选择天，周，和月。也就是每天每周每月被star次数最多的仓库。我以前上过一次Trending..完全不知道它这个算法咋写的，莫名其妙就上了，当然我上的是天..&lt;/p&gt;

&lt;p&gt;最牛逼的，是右边，右边！！&lt;/p&gt;

&lt;p&gt;你以为这就结束了？作为一个职业的开发者，你当然要找到自己的方面。我最为一个iOS开发者，当然是Objective-C和Swift了，偶尔我也会看一看ruby的。当然了，安卓一定要看java了~什么？没有java？选择other language即可~&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-11.png&quot; alt=&quot;github-11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当日期选择天的时候，一般会是一些开发者在微博@一些大v，然后引起一时轰动的项目，当然也有大项目。这些项目一般来说我觉得吧，质量参差不齐，有的很好有的也就一般..&lt;/p&gt;

&lt;p&gt;当日期选择月的时候，那基本上就是一些很牛逼的库了，这些库一般来说真的是，开发项目必备了。这个质量，那绝对是，刚刚的。&lt;/p&gt;

&lt;p&gt;现在语言选java，选today看下。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-12.png&quot; alt=&quot;github-12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我写博客的时候语言选择java的时候这样的..这时候就能发现完整的开源项目代码了，第五个！还有一些开源库。这个时候，一般我来说，看到我觉得不错的，果断下载下来阅读一下代码。觉得代码牛逼，立马star..多不带停顿的，有的库，我就直接star了..因为太牛逼看不懂。&lt;/p&gt;

&lt;p&gt;Trending基本上我隔个几天就会看一次，有的时候闲了，每天都会看，真的一看一上午，因为有时候顺手就下载下来看看里面的代码，看看差距了..&lt;/p&gt;

&lt;p&gt;我们再选个month看看。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-13.png&quot; alt=&quot;github-13&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第一个，我都知道谷歌出的flexbox-layout..一般来说月排行都能考前的，那基本上就是非常非常值得开发者去用和学习的库了。&lt;/p&gt;

&lt;p&gt;Trending会了，基本上能发现不少牛逼的开源库和开源的项目。这样就有的学习了。&lt;/p&gt;

&lt;p&gt;你以为到这大招就放完了吗？怎么可能。&lt;/p&gt;

&lt;h2 id=&quot;awesome&quot;&gt;awesome系列&lt;/h2&gt;

&lt;p&gt;上Github，怎么能不知道&lt;a href=&quot;https://github.com/sindresorhus/awesome&quot;&gt;awesome&lt;/a&gt;系列，这可是Github上总star数排名第十二的仓库。到我写文章的时候，35714star。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-14.png&quot; alt=&quot;github-14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然衍生的有各种awesome…比如&lt;a href=&quot;https://github.com/vsouza/awesome-ios&quot;&gt;awesome-ios&lt;/a&gt;，&lt;a href=&quot;https://github.com/JStumpp/awesome-android&quot;&gt;awesome-android&lt;/a&gt;，&lt;a href=&quot;https://github.com/akullpp/awesome-java&quot;&gt;awesome-java&lt;/a&gt;，&lt;a href=&quot;https://github.com/JStumpp/awesome-android&quot;&gt;awesome-android&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-15.png&quot; alt=&quot;github-15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus/awesome&quot;&gt;awesome&lt;/a&gt;。这玩意干啥的？简单的说，就是对某一个方面Github上的资源的汇总大贴！&lt;/p&gt;

&lt;p&gt;不想上Trending查，上awesome，帮你解决一切问题。比如&lt;a href=&quot;https://github.com/JStumpp/awesome-android&quot;&gt;awesome-android&lt;/a&gt;上有网络请求库，json解析库等等一系列功能的汇总，当然了，还有完整项目的汇总，我就不找了..毕竟iOS出生，安卓不熟悉。&lt;/p&gt;

&lt;p&gt;你以为到这大招就放完了吗？怎么可能。&lt;/p&gt;

&lt;h2 id=&quot;free-programming-bookshttpsgithubcomvhffree-programming-books&quot;&gt;&lt;a href=&quot;https://github.com/vhf/free-programming-books&quot;&gt;free-programming-books&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;这可是Github上总star数排名第三的仓库。到我写文章的时候，55328star。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-16.png&quot; alt=&quot;github-16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;免费的电子书！最重要的是，有中文的，有中文的，有中文的..重要的事情说三遍。虽然我推荐还是看中文，因为某些翻译简直爆炸。&lt;a href=&quot;https://github.com/vhf/free-programming-books/blob/master/free-programming-books-zh.md&quot;&gt;free-programming-books-zh&lt;/a&gt;地址放这了~&lt;/p&gt;

&lt;p&gt;你以为到这大招就放完了吗？怎么可能。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;搜索！&lt;/h2&gt;

&lt;p&gt;为啥加感叹号？因为这个功能，太牛逼了。&lt;/p&gt;

&lt;p&gt;这个得举例说明…对了插一句，Github有时候访问超级慢。我都是走代理走的..&lt;/p&gt;

&lt;p&gt;现在我们进到搜索界面，尝试搜索一下alert。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-17.png&quot; alt=&quot;github-17&quot; /&gt;&lt;/p&gt;

&lt;p&gt;什么，哇好多但是我现在要搜索Swift的资源怎么办？左边有语言选择！点完就能进去。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-18.png&quot; alt=&quot;github-18&quot; /&gt;&lt;/p&gt;

&lt;p&gt;什么，我要的语言没有，我想查一下ruby的alertview。那么，在搜索框输入，language:c就可以啦~&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-19.png&quot; alt=&quot;github-19&quot; /&gt;&lt;/p&gt;

&lt;p&gt;什么，这些星星星数好少啊。左边有选择哦，可以选择星星数量排序。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-20.png&quot; alt=&quot;github-20&quot; /&gt;&lt;/p&gt;

&lt;p&gt;什么，我要1000star以上的项目！输入框加上stars:&amp;gt;=500!当然可以和language组合了~&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-21.png&quot; alt=&quot;github-21&quot; /&gt;&lt;/p&gt;

&lt;p&gt;什么，我要查找fork过的仓库，很多人会fork一份自己加很多东西，加上 fork:true就可以啦。&lt;/p&gt;

&lt;p&gt;什么，我怎么知道这么多？看选择语言的下面！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-22.png&quot; alt=&quot;github-22&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在Cheat sheet里面有的！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-23.png&quot; alt=&quot;github-23&quot; /&gt;&lt;/p&gt;

&lt;p&gt;什么，我懒得记那么多啊？在Advanced search里面可以输入的！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/github-24.png&quot; alt=&quot;github-24&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;当然了，有时候我会觉得Github自身的搜索不行..我就会上谷歌..直接Github + 关键字..&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;不过大部分时间还是可以的。&lt;/p&gt;

&lt;p&gt;这样的话，如果我在搜索框输入个star数量，（不能什么都不输入！因为有限制！），就可以看到Github上仓库的star排名了~&lt;/p&gt;

&lt;h2 id=&quot;github-api&quot;&gt;Github API&lt;/h2&gt;

&lt;p&gt;Github作为全世界最大同性交友网站，当然会开放接口了。可以自己做很多基于Github的客户端，也是一个练手的好方法。&lt;/p&gt;

&lt;p&gt;在网站的最下面找API，点进去就可以啦。里面有很多开放接口，基本都是json格式的接口，用来做一个移动应用真是再好不过啦。&lt;/p&gt;

&lt;p&gt;网址 &lt;a href=&quot;https://developer.github.com/v3/&quot;&gt;Overview&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我就不详细介绍了。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;最后&lt;/h2&gt;

&lt;p&gt;以上，是我用Github那么久以来的一点感受。我一直觉得，学习写代码，最好的地方，就是Github，大量的看别人的源码，别人的开源库，能和世界上最顶尖的开发者一起学习，多么开心的一件事情~&lt;/p&gt;

&lt;p&gt;对了，插一句。在iOS开发界有一个人，他是优酷的开发者，因为发布了几个很牛逼的库，收到了facebook和uber的offer！他说他的学习方式，就是上Github看源码，然后自己琢磨写。&lt;/p&gt;

&lt;p&gt;所以，我们都加油吧~&lt;/p&gt;
</description>
        <pubDate>Thu, 26 May 2016 00:00:00 +0800</pubDate>
        <link>http://walkginkgo.com/ios/2016/05/26/github-use.html</link>
        <guid isPermaLink="true">http://walkginkgo.com/ios/2016/05/26/github-use.html</guid>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>开发者头条插件小记</title>
        <description>&lt;blockquote&gt;
  &lt;h3 id=&quot;githubhttpsgithubcomjudi0713toutiao---releasehttpsgithubcomjudi0713toutiaoreleases&quot;&gt;&lt;a href=&quot;https://github.com/judi0713/TouTiao&quot;&gt;Github地址&lt;/a&gt;  下载移步 &lt;a href=&quot;https://github.com/judi0713/TouTiao/releases&quot;&gt;release&lt;/a&gt;&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;啊，昨天忘配图了..补个github的图..&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://walkginkgo.com/images/toutiao.png&quot; alt=&quot;toutiao.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;先要感谢&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;这不是软文，是真的感谢。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;开发者头条是我安利过很多人的网站。因为说实话，做的真的很好。如果我觉得不好我就会换个网站开发插件了..在这里很多人会投稿一些些的好的文章。可以看到各个方面的知识。而且大部分的文章质量都很高（我已经从csdn迁移到开发者头条了）。慎哥也因为自己的投稿让自己的博客收获了很多的访问量，这对于开发者坚持写博客是一个很好的鼓励。所以，很感谢这么一个网站让我学到了很多东西。也让我扩充对整个计算机行业方面的认识不仅限于appweb还有后台了。&lt;/p&gt;

&lt;p&gt;无论如何要感谢开发者头条的创始人戚祥，当我在微信联系他和他说的时候，他觉得想法很好，然后让他们公司的工程师蒋春成联系了我。感到非常巧合而又幸运的是，他是我11级的学长。遇到了校友真的很亲切，和学长聊了好久啊，而且都是计算机人。蒋春成给了我很多帮助。不仅给了我很多意见，还给了我很多开发需要的素材。&lt;/p&gt;

&lt;p&gt;当然，还要感谢工作室的小伙伴，两台Mac电脑总是被我强行装上测试…特别感谢的还有慎哥，慎哥头一回那么支持工作，不仅装上了，还提了很多意见，大写的感谢。dkk同学甚至提了issue…也是厉害。&lt;/p&gt;

&lt;p&gt;最后，当然是感谢iOS开发大社区，摸着良心说，我写不出来Alamofire和Fuzi这种库。我只能凑合凑合尽我最大努力看源码和用去学习。没有这些为社区做贡献的大神们，也就没有很多个应用。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;起因&lt;/h2&gt;

&lt;p&gt;有开发Mac端插件的想法有两个原因，一是因为为了带小学弟，学起了Swift。二是因为看到了&lt;a href=&quot;https://github.com/kimar/Tailor&quot;&gt;Tailor&lt;/a&gt;这个Mac端的插件。当我看到Tailor的时候我第一个想法是，卧槽，swift改变世界，第二个想法是，看上去Mac端开发也不难，估计api都差不多…尝试一下吧…&lt;/p&gt;

&lt;p&gt;然后那几天就在想图拉鼎大神的Mac软件怎么做的。。正好那几天看OpenWrt需要php，php可以调shell和系统接口。想了想，啊，Mac软件开发嘛，就是调applescript和写iOS嘛，来试试吧～&lt;/p&gt;

&lt;p&gt;然后我就入坑了..在这大概分享一下整个的完成过程。&lt;/p&gt;

&lt;p&gt;总结一句话，看源码。这学期虽然没有看什么大项目的..倒是完整的工程看了不少。我一次列在下面好了。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kimar/Tailor&quot;&gt;Tailor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.raywenderlich.com/98178/os-x-tutorial-menus-popovers-menu-bar-apps&quot;&gt;OS X Tutorial: Menus and Popovers in Menu Bar Apps&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.raywenderlich.com/87002/getting-started-with-os-x-and-swift-tutorial-part-1&quot;&gt;Getting Started With OS X and Swift Tutorial: Part 1/3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/producthunt/producthunt-osx&quot;&gt;producthunt-osx&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/cezheng/Fuzi&quot;&gt;Fuzi&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;第一个就是有这个想法的来源。第二个第三个是ray上的教材，我没仔细看，直接把demo下下来的。第四个是那几天正好看到producthunt做了一个类似的，直接就下载了。Fuzi是用来解析xml的。大改就是这些东西。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;遇到的坑&lt;/h2&gt;

&lt;p&gt;遇到的第一个坑，是tableview不识别identifier…后来不知道咋的自己就好了。。这个坑后来想了想，可能是改名字之后需要重新设置一下…想不到其他的了。感觉就是把所有的重新设置一下自己就好了。&lt;/p&gt;

&lt;p&gt;第二个坑就是xml解析了。我依次尝试了&lt;a href=&quot;https://github.com/cezheng/Fuzi&quot;&gt;Fuzi&lt;/a&gt;（Tailor里使用的），&lt;a href=&quot;https://github.com/tid-kijyun/Kanna&quot;&gt;Kanna&lt;/a&gt;（这个是&lt;a href=&quot;https://github.com/CatchChat/Yep&quot;&gt;Yep&lt;/a&gt;里用到的），&lt;a href=&quot;https://github.com/tadija/AEXML&quot;&gt;AEXML&lt;/a&gt;（这个是&lt;a href=&quot;http://swift.gg/&quot;&gt;swiftgg&lt;/a&gt;在一片文章提到的），最近有看到雅虎的一个&lt;a href=&quot;https://github.com/yahoojapan/SwiftyXMLParser&quot;&gt;SwiftyXMLParser&lt;/a&gt;（这个也是swiftgg提到的），还没试验..但是看上去挺好的。&lt;/p&gt;

&lt;p&gt;我的思路在一开始错了，几乎所有的解析xml都是可以用&lt;a href=&quot;http://www.w3schools.com/xsl/xpath_intro.asp&quot;&gt;xpath&lt;/a&gt;来解析的，但是吧，我这个人偷懒，不想去学xpath，这就导致了我一路想用css来解析，后来发现坑了。于是开始转换思路写xpath，对着Tailor的解析写，很快也就搞定了。xpath是一个很好的东西，真的值得去了解和学习一下。&lt;/p&gt;

&lt;p&gt;第三个坑，其实也不算坑，但是确实是个问题，就是Mac和iOS的迁移问题。正好，就那么巧…虾神前几天发了一篇UXKit的公众号文章，非常值得看下。对于我这种小项目，我觉得完全可以采用UXKit的方式。虾神在里面说的比我好太多了..毕竟不是一个水平。&lt;/p&gt;

&lt;p&gt;不过说实话，我没想到Mac和iOS的api会差那么多。后面还是值得学习一下的。&lt;/p&gt;

&lt;p&gt;最后就是，我在整个项目当中，是没有用到applescript的，但是这是Mac开发很重要的东西，后面也会想办法去尝试一下applescript。这是我很遗憾的一点。&lt;/p&gt;

&lt;p&gt;彩蛋。&lt;/p&gt;

&lt;p&gt;在看Tailor的代码的时候看到了函数式编程的东西..这也算是swift语言很重要的一点，我在上一篇的博客的时候介绍了部分haskell的东西。最近有在继续haskell的学习，所以顺便提一下。&lt;/p&gt;

&lt;p&gt;在网络层，Tailor作者用了map函数，还用了flatmap，很好的对数据进行了分组解析再合并。这一块的代码我实在是觉得太nice了，就抄了。当然整个开发过程中很多代码都是抄的…&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;最后&lt;/h2&gt;

&lt;p&gt;我总和工作室的人说。要回馈这个社区，要懂得感恩。这一次我好像做了那么一点努力。这大概就是之前工作室死了的那个项目小初的初衷不忘初心吧。&lt;/p&gt;

&lt;p&gt;之前因为做外包，也不会很认真的去看一些很牛逼的库，就是一味的实现功能。不会去像现在这样去做点自己觉得好玩的东西，去尝试一些没尝试过的东西。至少这次做了一个东西，自己会去用。之前的外包项目，我手机里都没安装。&lt;/p&gt;

&lt;p&gt;而且就像蒋春成和我说的那样，这次，真的很有成就感。虽然这个代码的难度不高，实现的功能不复杂，但是做的很开心啊，也愿意去做。&lt;/p&gt;

&lt;p&gt;即使没有外包没有钱，一种纯“情怀”的状态。&lt;/p&gt;

&lt;p&gt;所谓穷开心，大概就是这么一种状态。&lt;/p&gt;

&lt;p&gt;祝开发者头条越来越好，我这个重度投稿者也会继续投稿我觉得质量上乘的文章的~&lt;/p&gt;
</description>
        <pubDate>Wed, 04 May 2016 00:00:00 +0800</pubDate>
        <link>http://walkginkgo.com/ios/2016/05/04/Toutiao.html</link>
        <guid isPermaLink="true">http://walkginkgo.com/ios/2016/05/04/Toutiao.html</guid>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>Higher-Order Functions</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;本来打算昨天写的，昨天说好了休假又帮忙解决很多问题。
今天不打算写的，今天实验课太无聊。我决定写一写。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;最后的部分可能我会结合swift来写一写。看我写的进度…&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;背景&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;说好的看Learn You a Haskell for Great Good，寒假敲了不少，到higher-order function卡了。光敲已经不能理解了。最近的早上有时候去的早就会看一看理解一下Haskell，把higher-order function看了小半，Lambdas之前的部分，准备写一写，也算是个记录。不得不感叹，这玩意真TM难懂。&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;introduction&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;首先简单的说一下Haskell的语法，只有这样我才能更好的把后面的东西写明白。&lt;/p&gt;

&lt;p&gt;首先来看一个函数，lucky。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lucky :: Int -&amp;gt; String
lucky 7 = &quot;LUCKY NUMBER SEVEN!&quot;
lucky x = &quot;Sorry, you&#39;re out of luck, pal!&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个其实和swift的语法很相似，以至于我觉得swift这里很大程度上借鉴了haskell的语法。lucky作为一个函数，参数是一个Int类型，返回值是一个String类型。当我们运行时，如果是7，就会显示是幸运数字，如果不是，那就显示sorry。&lt;/p&gt;

&lt;h2 id=&quot;higher-order-function&quot;&gt;higher-order function&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;什么是higher-order function。在haskell第五章的开始说了。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Haskell functions can take functions as parameters and return functions as return values. A function that does either of these things is called a higher-order function.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在wiki中得介绍是这样的。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;在数学和计算机科学中，高阶函数是至少满足下列一个条件的函数：
接受一个或多个函数作为输入
输出一个函数&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;可以看到这两个其实想表达的意思是一样的。那就是，函数作为参数，或者返回一个函数。&lt;/p&gt;

&lt;p&gt;简单的说，在C语言中，我们都是这么写的…void func(int, int) return void。&lt;/p&gt;

&lt;p&gt;在haskell中，我们可以这么写，func func(func, func) return func。&lt;/p&gt;

&lt;p&gt;在函数式编程中，函数已经成为了头等公民。这就是高阶函数。到这基本上就可以理解面向对象总是说函数式把函数传来传去的梗了…&lt;/p&gt;

&lt;h2 id=&quot;func-return-func&quot;&gt;func return func&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;我们一个一个来看。先看返回一个函数的情况。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;multThree :: Int -&amp;gt; Int -&amp;gt; Int -&amp;gt; Int
multThree x y z = x * y * z
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这是一个函数，参数是三个Int类型，返回这三个Int的乘积。&lt;/p&gt;

&lt;p&gt;也可以写成这样。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;multThree :: Int -&amp;gt; (Int -&amp;gt; (Int -&amp;gt; Int))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;所以，我们来分析书上的一个例子。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ghci&amp;gt; let multTwoWithNine = multThree 9
ghci&amp;gt; multTwoWithNine 2 3
54
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在这里，我们让multTwoWithNine等于了一个函数，这个函数是multThree 9。那这个时候multThree 9实际上算是返回了一个函数。那么这样的话，可以将这个函数赋值为一个变量。&lt;/p&gt;

&lt;p&gt;也就是我们的multTwoWithNine。这个时候我们的multTwoWithNine实际上要计算的就是两个数的乘积再乘上9，而乘9，实际上不算是一个函数。&lt;/p&gt;

&lt;p&gt;这里就达到了函数返回一个函数。即我的标题，func return func。&lt;/p&gt;

&lt;h2 id=&quot;func-as-parameters&quot;&gt;func as parameters&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;来看例子。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In Haskell, functions can take other functions as parameters, and as you’ve seen, they can also return functions as return values.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;也就是说，函数可以将函数作为参数。&lt;/p&gt;

 	applyTwice :: (a -&amp;gt; a) -&amp;gt; a -&amp;gt; a
 	applyTwice f x = f (f x)

&lt;p&gt;这个例子种，f实际上就是一个方法。&lt;/p&gt;

&lt;p&gt;看个例子就明白了。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ghci&amp;gt; applyTwice (+3) 10
16
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在这里，我们看上去applyTwice有三个参数，但是前两个参数被包起来了。也就是说，我们有一个函数参数，一个参数和一个返回值。&lt;/p&gt;

&lt;p&gt;f x = f (f x)实际上就是f方法执行了两次。&lt;/p&gt;

&lt;p&gt;怎么去理解高阶函数呢？实际上在我看来，可以这么理解，第一个函数参数，实际上实现了在第三个参数的操作。&lt;/p&gt;

&lt;p&gt;为什么这里会等于16，实际上这样操作的。10 + 3 + 3。也就是，实际上第三个参数执行了函数参数的方法，得到了返回值。&lt;/p&gt;

&lt;p&gt;说了这么多还是混乱是吧…感觉上这个例子可能不能很好的说明。那我们看两个好懂的。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zipWith&#39; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c]
zipWith&#39; _ [] _ = []
zipWith&#39; _ _ [] = []
zipWith&#39; f (x:xs) (y:ys) = f x y : zipWith&#39; f xs ys
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;按照我上面说的，第一个函数参数，实际上是a，b参数返回c。&lt;/p&gt;

&lt;p&gt;那么我们对[a]中的元素和[b]中的元素执行第一个函数的方法，最后返回的应该是列表中的每一个元素操作后的结果。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ghci&amp;gt; zipWith&#39; (+) [4,2,5,6] [2,6,2,3]
[6,8,7,9]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个例子中，对[a]和[b]中的每一个元素进行+操作。实际上就是第一个(a -&amp;gt; b -&amp;gt; c)中的操作了。&lt;/p&gt;

&lt;p&gt;第二行和第三行的意思其实是，第一个函数参数不管它什么类型，我们迪哥参数和第三个参数只要是列表，就返回列表。&lt;/p&gt;

&lt;p&gt;这么一看，其实高阶函数也不是很难吧。&lt;/p&gt;

&lt;p&gt;再看一个map，这个在rac和rx都有用到。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;map :: (a -&amp;gt; b) -&amp;gt; [a] -&amp;gt; [b]
map _ [] = []
map f (x:xs) = f x : map f xs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我们看这个函数，按照对zipWith’的理解，我们知道，这个操作其实是对[a]列表中的元素进行操作，然后这些值返回一个[b]列表。&lt;/p&gt;

&lt;p&gt;我们来分析一个复杂点的map。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ghci&amp;gt; map (map (^2)) [[1,2],[3,4,5,6],[7,8]]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;首先我们(a -&amp;gt; b)要进行的函数操作其实是(map (^2))，那对第一个列表[1,2]来说，又是一个列表了，所以要返回一个列表。(map (^2)) 1 的结果是1，(map (^2)) 2的结果是4，然后返回一个列表，即[1,4]。一次类推，所以结果就是。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[[1,4],[9,16,25,36],[49,64]]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;swift&quot;&gt;swift中的应用&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.devtang.com/2016/02/27/swift-gym-3-higher-order-function/&quot;&gt;Swift 烧脑体操（三） - 高阶函数&lt;/a&gt;看到了swift中高阶函数的运用。&lt;/p&gt;

&lt;p&gt;那我们来迁移一下理解。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let arr = [1, 2, 4]
// arr = [1, 2, 4]

let brr = arr.map {
	&quot;No.&quot; + String($0)
}
// brr = [&quot;No.1&quot;, &quot;No.2&quot;, &quot;No.4&quot;]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第一个arr.map，在map中，实际上就是实现了我们上文map中f的应用，对列表里的每个元素就会进行操作。实际上和haskell中的map函数没有什么差别了。&lt;/p&gt;

&lt;p&gt;实际上来说，高阶函数的应用很多，后面我在学习swift之后会继续说说这个高阶函数，当然，在我能搞定的情况下，我想尝试去学学Monad。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;大概，大概，把我理解的高阶函数交会给工作室学弟学妹们的时候，就是我要离开工作室去考研或者工作的时候了~&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 06 Mar 2016 00:00:00 +0800</pubDate>
        <link>http://walkginkgo.com/free/2016/03/06/Higher-Order-Functions.html</link>
        <guid isPermaLink="true">http://walkginkgo.com/free/2016/03/06/Higher-Order-Functions.html</guid>
        
        
        <category>free</category>
        
      </item>
    
      <item>
        <title>大三上+我的2016年总结</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;前几天就写好了一直没发。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;这是一篇很水的博客。仅写给自己。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;还有几天，我这总结的博客拖了又拖到现在才开始写。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;不废话开始总结&lt;/h2&gt;

&lt;h3 id=&quot;section-1&quot;&gt;大三上&lt;/h3&gt;

&lt;p&gt;这学期写了9篇博客。iOS方面3篇，感想2篇，杂七杂八的倒腾2篇。&lt;/p&gt;

&lt;p&gt;看了3本还是4本书…我来想想，看了知乎的选集，创业时我们在聊什么，于丹的最美古诗词，黑客与画家，翻了大秦帝国的某半本，围城半本。好像还一本，记不得了，这点很不错。&lt;/p&gt;

&lt;p&gt;出去玩了2次。感谢姜导和姜嫂。也感谢瑶姐。让我索然无味的写代码生活多了一点其他的颜色。&lt;/p&gt;

&lt;p&gt;这学期出去吃了N多次，不过也算是平常辛苦的犒劳吧。&lt;/p&gt;

&lt;p&gt;日记写了一学期的，这点也很满意。&lt;/p&gt;

&lt;p&gt;这学期买正版软件买了大好几百的样子。现在开始逐渐的支持正版，即使是office这种，我都淘宝买账号，又不贵，还省去了破解的麻烦。&lt;/p&gt;

&lt;p&gt;工作室项目做了一个，那个坑一样的项目。不过基本上算是摆脱外包生活了。可以没有钱，但不能让外包影响心情。&lt;/p&gt;

&lt;p&gt;自己还做了一个，正在上线过程中。敬请期待。不过不出意外的话，下学期要上线了。&lt;/p&gt;

&lt;p&gt;依旧坚持了锻炼，除了中间有段时间脖子疼，其他时间基本每天都有锻炼，初期是平板支撑加俯卧撑，后面加了打球，到最后面是跑步，最近都有在跑，欢迎各位后面约跑。总之一直都在锻炼，瘦了10斤，但是确实感觉到胳膊和肚子上逐渐都有了肌肉的痕迹。&lt;/p&gt;

&lt;p&gt;期末的时候换了手机，为了省钱只换了5s。&lt;/p&gt;

&lt;p&gt;学习上，学校那些专业课开的，我简直了。很多东西都过时了！！什么年代了还用这个那个的软件。行不行啊？汇编软工计网编程好评，其他都差评。&lt;/p&gt;

&lt;p&gt;这学期觉得听的最爽的课是毛概。我很认真的。&lt;/p&gt;

&lt;p&gt;这学期，申请入党了。考试也过了，到现在不通知我。党是不是不愿意吸收我。&lt;/p&gt;

&lt;p&gt;技术上，总算是摆脱了瓶颈期。看了yy大神的采访稿才知道后面应该怎么做，技术人，还是要多看源码。&lt;/p&gt;

&lt;p&gt;当然，技术上还学了很多其他的东西，这点我还是挺满意的，比如倒腾各种东西的时间越来越快。也开始逐渐接触一些更高端的东西。&lt;/p&gt;

&lt;p&gt;最近也在开始逐渐的了解整个互联网的生态环境，更加全方位的发展。主要是体验产品和对产品的理解上，都在刻意的带着训练自己。&lt;/p&gt;

&lt;p&gt;依旧是抄了一学期的作业。不过已经进步了，有些能自己写的都自己写了，不想写的都抄了，大部分都不想写。我没写作业的时间都用来写代码了。很多课也开始逐渐的变得自己靠自己，而不是靠别人。这是我很感到进步的一点。&lt;/p&gt;

&lt;p&gt;这学期最大的事情算是接手工作室吧。但这是后话。&lt;/p&gt;

&lt;p&gt;重修刷分，是这学期最失败的一件事情。不过也是好事，我算是彻底打消了出国的想法。后面可以安心的准备考研或者工作。&lt;/p&gt;

&lt;p&gt;这学期除了自己变懒了，很多计划还是没有做成，看了太多直播。而且确实，有些专业课还是要看一看的。晚睡拖延症越发严重。这是不好的。&lt;/p&gt;

&lt;p&gt;感觉这学期其实特要感谢以及表扬一个人，慎哥。比较努力，跟我学iOS也很辛苦，干了很多搬砖的事情，但是确实很认真。也没事指导我穿衣打扮，在此，特意感谢以及表扬。&lt;/p&gt;

&lt;p&gt;其他人，感谢起来就太多了。不一一说了。你们都知道我是爱你们的。&lt;/p&gt;

&lt;p&gt;这学期用我挺哥的话说，除了XX，都完美了，那两个字请自行脑补。我实在是不堪回首。要好好学习了啊。&lt;/p&gt;

&lt;p&gt;哦，对了，很严肃的话题。这学期依旧单身。即使觉得有姑娘不错。但是依旧单身。&lt;/p&gt;

&lt;p&gt;自从回168韦老师和我说，不要着急，不能凑合，不能放低标准。我现在很淡定，以后我们就是高级工程师，公司CTO。姑娘们看着办。&lt;/p&gt;

&lt;p&gt;这学期也想明白很多事情，比如钱和情怀。还有没想明白的，依旧纠结的考研和工作。&lt;/p&gt;

&lt;p&gt;打个分，75吧，原计划，85的，真的。要不是是吧，就85了。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;2016年终总结&lt;/h3&gt;
&lt;p&gt;博客写了26篇。&lt;/p&gt;

&lt;p&gt;单身。&lt;/p&gt;

&lt;p&gt;技术上越发成熟。&lt;/p&gt;

&lt;p&gt;又一年了。&lt;/p&gt;

&lt;p&gt;其实这一年没啥好总结的。学习就那样，技术上也就那样。&lt;/p&gt;

&lt;p&gt;真的发自内心的感谢信安一班。你们又陪我度过了一年。这一年，和我在一起时间最长的就是你们。打球也好上课也好写代码也好。总有很多欢乐。&lt;/p&gt;

&lt;p&gt;不能提名字，提名字就写不完了。各种感谢！深鞠躬！爱你们！&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Feb 2016 00:00:00 +0800</pubDate>
        <link>http://walkginkgo.com/life/2016/02/06/sumup.html</link>
        <guid isPermaLink="true">http://walkginkgo.com/life/2016/02/06/sumup.html</guid>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>我的chrome插件</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;起因&lt;/h2&gt;

&lt;p&gt;今天帮同学配完surge，顺便安利了pocket，后来发现同学不会用..然后就想到我可以把我用到的chrome插件写一写。&lt;/p&gt;

&lt;p&gt;正好最近也没写博客了，就当滥竽充数完成当初计划的每周一更的计划吧…&lt;/p&gt;

&lt;p&gt;我只写我常用的，我不常用的就略过了。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;正文&lt;/h2&gt;
&lt;p&gt;以下推荐等级，5是满分！&lt;/p&gt;

&lt;p&gt;先附张图。这是我的插件栏，但是好多插件可以直接运行，比如划词翻译，我就让插接件栏不显示他们了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome/chrome-1.png&quot; alt=&quot;chrome-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第一个是SwitchySharp，第二个是开发者头条的分享插件，第三个是postman，第四个是pocket，第五个onetab，第六个feedly，第七个1password。第八个是postman的抓包插件。&lt;/p&gt;

&lt;p&gt;具体见下文。所有插件名都可以点！所有插件名都可以点！所有插件名都可以点！&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;我最常用的&lt;/h2&gt;

&lt;h3 id=&quot;password-extensionhttpschromegooglecomwebstoredetail1password-password-manageaomjjhallfgjeglblehebfpbcfeobpgkutmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/1password-password-manage/aomjjhallfgjeglblehebfpbcfeobpgk?utm_source=chrome-ntp-icon&quot;&gt;1Password extension&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：4&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome/chrome-2.png&quot; alt=&quot;chrome-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;大名鼎鼎的密码管理软件推出的chrome插件，储存之后基本上就不用每次输密码了，点击1Password的插件就可以自动帮你输入账号密码了。对于我这种各大网站论坛都有账号的人来说简直是福利。&lt;/p&gt;

&lt;p&gt;1password在appstore是收费的，不过最近在打半价。前几天就入了一个。&lt;/p&gt;

&lt;h3 id=&quot;lastpass-free-password-managerhttpschromegooglecomwebstoredetaillastpass-free-password-mahdokiejnpimakedhajhdlcegeplioahdutmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/lastpass-free-password-ma/hdokiejnpimakedhajhdlcegeplioahd?utm_source=chrome-ntp-icon&quot;&gt;LastPass: Free Password Manager&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：4.5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome/chrome-3.png&quot; alt=&quot;chrome-3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个是之前用的密码管理插件，这个是免费的，只有跨平台的时候需要收费。当然如果只是基于浏览器的话，这个非常方便。它不像1Password需要点击才能自动填写你的用户名和密码，这个是自动检测的，用一次就明白了，非常非常推荐。&lt;/p&gt;

&lt;p&gt;我之所以换1Password是因为1Password降价了…而且想在手机上也用，不然LastPass依然是我的首选。省去了我记密码的事情，再也不用每次用个文档记录还得查。&lt;/p&gt;

&lt;h3 id=&quot;avatars-for-githubhttpschromegooglecomwebstoredetailavatars-for-githubpgjmdbklnfklcjfbonjfkdhaonlfogbbutmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/avatars-for-github/pgjmdbklnfklcjfbonjfkdhaonlfogbb?utm_source=chrome-ntp-icon&quot;&gt;Avatars for Github&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：4&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome/chrome-4.png&quot; alt=&quot;chrome-4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个插件是之前stormzhang在微信公众号AndroidDeveloper上推荐的插件。原文&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&amp;amp;mid=402064553&amp;amp;idx=1&amp;amp;sn=4bc95ed03916f87cc8dfd17baed54f24&quot;&gt;吐血推荐珍藏的Chrome插件&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;作为程序员，Github基本上快要成为我每天必须要逛的网站了。Github你follow的人动态会显示在首页，但是只显示人名，大部分时间里你不知道大部分的人名对应哪个人。有了这个插件，它会显示头像，这样看上去就知道，啊，原来是这个大神有star了某个牛逼的项目。非常之方便。&lt;/p&gt;

&lt;p&gt;同时在之前的那篇文章里还推荐了Octotree，可以显示Github中代码的目录，我就不做详细介绍了。&lt;/p&gt;

&lt;h3 id=&quot;feedly-minihttpschromegooglecomwebstoredetailfeedly-minindhinffkekpekljifjkkkkkhopnjodjautmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/feedly-mini/ndhinffkekpekljifjkkkkkhopnjodja?utm_source=chrome-ntp-icon&quot;&gt;feedly Mini&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：4.5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome/chrome-5.png&quot; alt=&quot;chrome-5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个简直是我用的最频繁的插件之一了..作为feedly的重度使用用户，我必须要安利一下这个插件。&lt;/p&gt;

&lt;p&gt;博客基本上都支持rss订阅，这样博客有新文章我这边就能看到了。&lt;/p&gt;

&lt;p&gt;这个插件一是可以在可以订阅rss的网页右下角显示一个feedly的图标，可以直接订阅这个博客到你的feedly列表。&lt;/p&gt;

&lt;p&gt;而且可以在chrome插件栏快速打开你的feedly web端，现在每天开chrome第一件事情，先是开feedly看看有没有博客更新。&lt;/p&gt;

&lt;h3 id=&quot;github-menu-backhttpschromegooglecomwebstoredetailgithub-menu-backmcobennfgmfddjmiikfamhhhiibcjbikutmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/github-menu-back/mcobennfgmfddjmiikfamhhhiibcjbik?utm_source=chrome-ntp-icon&quot;&gt;Github Menu Back&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：4&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome/chrome-6.png&quot; alt=&quot;chrome-6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;之前Github的首页改版了…&lt;/p&gt;

&lt;p&gt;搜索栏旁边的Explore没了，没了！！！而且你的头像在最右边，还特别小！！！&lt;/p&gt;

&lt;p&gt;后来那天刚改版，就有人觉得不习惯，于是开发了一个这个插件，简单的说，你的Github最上面恢复到之前的样子了。&lt;/p&gt;

&lt;p&gt;有Explore，还有大大的头像，大爱。还是喜欢老版本的。&lt;/p&gt;

&lt;h3 id=&quot;onetabhttpschromegooglecomwebstoredetailonetabchphlpgkkbolifaimnlloiipkdnihallutmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/onetab/chphlpgkkbolifaimnlloiipkdnihall?utm_source=chrome-ntp-icon&quot;&gt;OneTab&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：4.5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome/chrome-7.png&quot; alt=&quot;chrome-7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;熊大大给我推荐的插件，已经成为我chrome插件的常驻了。&lt;/p&gt;

&lt;p&gt;怎么用呢。&lt;/p&gt;

&lt;p&gt;我们都有这样的场景，打开了一堆网页，每个都觉得好，但是很晚了要回去来不及看怎么办。&lt;/p&gt;

&lt;p&gt;OneTab一下~它会把你现在打开的所有tab变成一个网页，里面有你打开的所有网页的url。这时候你关机回家。&lt;/p&gt;

&lt;p&gt;第二天来了，只要restore一下，这些网页又全部打开了~这还不是重点。之前我在配路由器的时候有很多网站都很好，舍不得关闭，又懒得收藏，还想发给班长。直接onetab一下，它自带了share的功能，这时候把它share生成的那个url发给班长，班长就能看到我找到的这些网站了。&lt;/p&gt;

&lt;p&gt;不能更赞！&lt;/p&gt;

&lt;h3 id=&quot;save-to-pockethttpschromegooglecomwebstoredetailsave-to-pocketniloccemoadcdkdjlinkgdfekeahmfljutmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/save-to-pocket/niloccemoadcdkdjlinkgdfekeahmflj?utm_source=chrome-ntp-icon&quot;&gt;Save to Pocket&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome/chrome-8.png&quot; alt=&quot;chrome-8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;两个满分推荐之一。&lt;/p&gt;

&lt;p&gt;pocket简直就是一个神一样存在的插件。&lt;/p&gt;

&lt;p&gt;pocket是一个完整的一套。安卓到iOS，平板到手机。&lt;/p&gt;

&lt;p&gt;不仅满分推荐，而且我各种安利别人…&lt;/p&gt;

&lt;p&gt;干啥的呢，你安装之后，如果你上网看到好的文章，你就可以点这个插件，iphone和安卓都可以发送到pocket。然后你的pocket就会把整个网页重新排版，然后还可以缓存到你的平板或者手机上，这时候你想啥时候看就可以啥时候看了。&lt;/p&gt;

&lt;p&gt;上厕所，坐车，都可以看，我经常性看到好的博客，就直接pocket一下，然后缓存好，没事的时候直接在平板就直接看了。简直不能更赞。&lt;/p&gt;

&lt;h3 id=&quot;postman-httpswwwgetpostmancomapps&quot;&gt;&lt;a href=&quot;https://www.getpostman.com/apps&quot;&gt;Postman 系列&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：4.5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome/chrome-9.png&quot; alt=&quot;chrome-9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Postman是测试接口的软件，这是开发必备，可以看返回的json数据，可以模拟各种请求。&lt;/p&gt;

&lt;p&gt;Postman最近还推出了抓包的插件Postman Interceptor，非常赞！也是我日常必备插件。&lt;/p&gt;

&lt;p&gt;这个不用多介绍，下载点开就明白咋用了。用了就知道好用。&lt;/p&gt;

&lt;h3 id=&quot;proxy-switchysharphttpschromegooglecomwebstoredetailproxy-switchysharpdpplabbmogkhghncfbfdeeokoefdjegmutmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/proxy-switchysharp/dpplabbmogkhghncfbfdeeokoefdjegm?utm_source=chrome-ntp-icon&quot;&gt;Proxy SwitchySharp&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome/chrome-10.png&quot; alt=&quot;chrome-10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第二个满分推荐。&lt;/p&gt;

&lt;p&gt;作为ss的重度使用用户，用这个设置代理翻墙，还是很方便的。关于翻墙的东西，不多说，大家明白就好。&lt;/p&gt;

&lt;p&gt;这个可以不再chrome store下载哦~&lt;/p&gt;

&lt;h3 id=&quot;httpschromegooglecomwebstoredetaile5bc80e58f91e88085e5a4b4e69da1e58886e4baabe68f92e4bbb6kdchifnbpeflbphakmpbcfdjeidkfeoputmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/%E5%BC%80%E5%8F%91%E8%80%85%E5%A4%B4%E6%9D%A1%E5%88%86%E4%BA%AB%E6%8F%92%E4%BB%B6/kdchifnbpeflbphakmpbcfdjeidkfeop?utm_source=chrome-ntp-icon&quot;&gt;开发者头条分享插件&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：4&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome/chrome-11.png&quot; alt=&quot;chrome-11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;开发者头条也是每天毕逛的网站，各种开发咨询。一般看到好的都会顺便分享到开发者头条。当然不做开发一般就用不到了。&lt;/p&gt;

&lt;h3 id=&quot;httpschromegooglecomwebstoredetaile58892e8af8de7bfbbe8af91ikhdkkncnoglghljlkmcimlnlhkeamadutmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/ikhdkkncnoglghljlkmcimlnlhkeamad?utm_source=chrome-ntp-icon&quot;&gt;划词翻译&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：4.5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome/chrome-12.png&quot; alt=&quot;chrome-12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选中一个词会出现一个 译 字，点击就可以翻译。对于英文不好的人，这个是神器。还可以设置很多东西，总之，很方便。雷神也在用。&lt;/p&gt;

&lt;h3 id=&quot;capture-webpage-screenshot-entirely-fireshothttpschromegooglecomwebstoredetailcapture-webpage-screenshomcbpblocgmgfnpjjppndjkmgjaogfcegutmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/capture-webpage-screensho/mcbpblocgmgfnpjjppndjkmgjaogfceg?utm_source=chrome-ntp-icon&quot;&gt;Capture Webpage Screenshot Entirely. FireShot&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：3.5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chrome/chrome-13.png&quot; alt=&quot;chrome-13&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个插件也是我用的比较多的，这个插件可以将你的网页保存成一个image，或者pdf，最主要的时可以把整个网页截图。&lt;/p&gt;

&lt;p&gt;我经常看到某个需要经常保存的网页了或者是输入了一串东西想保存整个网页我都用这个。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;其他推荐&lt;/h3&gt;

&lt;p&gt;这里就不配图了~&lt;/p&gt;

&lt;h3 id=&quot;chrono-download-managerhttpschromegooglecomwebstoredetailchrono-download-managermciiogijehkdemklbdcbfkefimifhecnutmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/chrono-download-manager/mciiogijehkdemklbdcbfkefimifhecn?utm_source=chrome-ntp-icon&quot;&gt;Chrono Download Manager&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：3&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这个是一个对chrome本身下载进行扩展的插件，可以看进度，整个把chrome原生的下载界面变成和迅雷差不多的。&lt;/p&gt;

&lt;p&gt;之前是看班长在用，觉得啊，好高大上，后来觉得仿佛也用不到那么多功能。就没怎么用了。chrome的下载速度，永远是我的痛。&lt;/p&gt;

&lt;h3 id=&quot;colorzillahttpschromegooglecomwebstoredetailcolorzillabhlhnicpbhignbdhedgjhgdocnmhomnputmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp?utm_source=chrome-ntp-icon&quot;&gt;ColorZilla&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：3.5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;chrome下的取色软件。其实很好，可以取网页中各个元素的颜色。优点很明显，但是只能取网页，我在开发app的时候大部分都是取图片的颜色。&lt;/p&gt;

&lt;p&gt;而且mac下有一个很成熟的取色软件，什么都能取，叫sip，我现在已经全线转sip了。&lt;/p&gt;

&lt;h3 id=&quot;editthiscookiehttpschromegooglecomwebstoredetaileditthiscookiefngmhnnpilhplaeedifhccceomclgfbgutmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg?utm_source=chrome-ntp-icon&quot;&gt;EditThisCookie&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：3.5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;看名字就知道，这个是可以改网页cookie的，之前在做chrome模拟微信登陆的时候用到过，但是后来也没怎么用了，毕竟不做这方面确实没办法。&lt;/p&gt;

&lt;h3 id=&quot;ghosteryhttpschromegooglecomwebstoredetailghosterymlomiejdfkolichcflejclcbmpeaniijutmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/ghostery/mlomiejdfkolichcflejclcbmpeaniij?utm_source=chrome-ntp-icon&quot;&gt;Ghostery&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：4&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这个是可以查看有多少网站的js对你进行了跟踪和识别等等，我一直开着，不过最近已经没怎么用了。&lt;/p&gt;

&lt;p&gt;如果你想知道谁跟踪了你，这个插件绝对是非常nice的。&lt;/p&gt;

&lt;h3 id=&quot;search-by-imagehttpschromegooglecomwebstoredetailsearch-by-image-by-googledajedkncpodkggklbegccjpmnglmnflmutmsourcechrome-ntp-icon&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/search-by-image-by-google/dajedkncpodkggklbegccjpmnglmnflm?utm_source=chrome-ntp-icon&quot;&gt;Search by Image&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;推荐等级：4&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;可以搜索图片，邮件图片就会有search google with this image了。google官方推出。&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Feb 2016 12:40:00 +0800</pubDate>
        <link>http://walkginkgo.com/free/2016/02/03/chrome.html</link>
        <guid isPermaLink="true">http://walkginkgo.com/free/2016/02/03/chrome.html</guid>
        
        
        <category>free</category>
        
      </item>
    
      <item>
        <title>OpenWrt小记</title>
        <description>&lt;h3 id=&quot;cbsflyhttpcbsflygithubio&quot;&gt;慎哥开博客了，博客做的很好看！欢迎访问~&lt;a href=&quot;http://cbsfly.github.io&quot;&gt;cbsfly&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;请合理利用互联网，不要对国家安全造成任何威胁！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为要做比赛所以倒腾了&lt;a href=&quot;https://openwrt.org/&quot;&gt;OpenWrt&lt;/a&gt;倒腾了不到一天，做个小的记录。&lt;/p&gt;

&lt;p&gt;前天上网买的路由器昨天就到货了，淘宝，33，硬改了的。16M闪存64内存好像。&lt;/p&gt;

&lt;p&gt;昨天和店家交流了一下，店家人真的不错。然后我就开始把店家装好的操作系统重装，这次买的路由器是可以刷官方原版的，我就下载了一个最新版的&lt;a href=&quot;http://downloads.openwrt.org/chaos_calmer/15.05/&quot;&gt;chaos_calmer&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;什么是OpenWrt，简单的说，就是在你的路由器里面装个Linux操作系统。装上Linux的操作系统，是吧，你们懂得。基本上啥都能干了。&lt;/p&gt;

&lt;p&gt;如果你家用的是极路由或者是小米路由，你要清楚，那都是深度定制的OpenWrt…&lt;/p&gt;

&lt;p&gt;我倒腾了如下几个东西。一，中继。二，jump gfw。三，8021x校园网拨号。具体如下。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;预备&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;首先你得有个硬件能刷操作系统的路由器。我建议某宝买硬改的，很便宜。&lt;/li&gt;
  &lt;li&gt;在ubuntu中，操作系统更新和安装软件用的是apt-get，在OpenWrt里用的是opkg(我觉得是OpenWrt Package的缩写)&lt;/li&gt;
  &lt;li&gt;第二步可以联网进行操作，也可以本地安装。当然我一直觉得联网的好，不用编译配置啥的了…&lt;/li&gt;
  &lt;li&gt;刚刷完操作系统的时候路由器的无线网默认是关闭的，需要登录打开。&lt;/li&gt;
  &lt;li&gt;因为是操作系统，所以我们可以通过ssh root@192.168.1.1来对操作系统进行操作。&lt;/li&gt;
  &lt;li&gt;刷完路由器的那个web界面叫luci。下文会用到。&lt;/li&gt;
  &lt;li&gt;没找到中文语言包，所以下文全是英文。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-1&quot;&gt;中继&lt;/h2&gt;
&lt;p&gt;OpenWrt可以作为无线中继。在此感谢班长和姜导提供该技能包。&lt;/p&gt;

&lt;p&gt;所谓无线中继，就是你用OpweWrt连接无线网，然后再把这个无线网的信号扩展了。这样就解决了一个路由器信号不够强的问题。其次，前文说道，OpenWrt是个Linux的操作系统，我们安装软件需要让路由器联网。&lt;/p&gt;

&lt;p&gt;让路由器联网有两种方式，一种直接插网线到lan口。事实证明这样我就找不到路由器的ip了…&lt;/p&gt;

&lt;p&gt;在咨询了班长之后我选择了无线中继的方式。&lt;/p&gt;

&lt;p&gt;这有篇&lt;a href=&quot;http://wenku.baidu.com/link?url=X8GEcVGOxcygQFB3EmYr1pfvLFbn_JvY4-7aGNoBft2ykQCnd8-yTAVybONuVi7X-dhGqmgIHYKxGyI_v6MlnXxERGFTwGz8h_uSouBK4tS&quot;&gt;百度文库的教程&lt;/a&gt;写得很详细了我就不对步骤进行赘述了（百度文库还能有这种好材料…）因为我刷的是最新的cc版本路由器，所以界面不太一样，但是没啥差别。我只强调一个问题。&lt;/p&gt;

&lt;p&gt;在第一步里，一定要设置lan口的ip，不能在同一个网段。我设置成192.168.10.1，设置完成之后，OpenWrt路由器会通过上级路由器获得一个ip，通过OpenWrt这个路由连接的设备，ssh的ip地址变成192.168.10.1，web访问也变成192.168.10.1。&lt;/p&gt;

&lt;p&gt;全部设置完就可以通过OpenWrt路由器上网了，此时ssh到OpenWrt，发现已经可以ping了。&lt;/p&gt;

&lt;h2 id=&quot;jump-gfw&quot;&gt;jump gfw&lt;/h2&gt;
&lt;p&gt;前几天发朋友圈问了个敏感问题，没想到那么多人回复…&lt;/p&gt;

&lt;p&gt;我现在是要入党的人，但是我又是程序员，有时候确实不得不那什么。&lt;/p&gt;

&lt;p&gt;所以在此也说一下，你们有需求可以私聊我，我很乐意帮忙，具体手机和电脑怎么做我就不写了。路由器也是因为要做比赛才倒腾的。&lt;/p&gt;

&lt;p&gt;我用的是shadowsocks的方式，也可以用vpn，我们工作室的极路由提供了vpn的接口，表示vpn太难搭建。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/shadowsocks/openwrt-shadowsocks&quot;&gt;openwrt-shadowsocks&lt;/a&gt;Github地址。&lt;/p&gt;

&lt;p&gt;首先下载预编译的ipk到本地安装。在&lt;a href=&quot;http://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/2.4.3-33429ad/&quot;&gt;shadowsocks-libev&lt;/a&gt;找到对应的机型。我的是ar71xx，然后找到那个下载次数最多的shadowsocks-libev-spec版本。这个是针对OpenWrt的优化版本。&lt;/p&gt;

&lt;p&gt;下载完毕之后，通过scp命令上传到OpenWrt上，先&lt;code class=&quot;highlighter-rouge&quot;&gt;opkg update&lt;/code&gt;，这一步是更新源，和我们ubuntu的update一样。&lt;/p&gt;

&lt;p&gt;接着&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;opkg install shadowsocks-libev-spec_2.4.3-1_ar71xx.ipk&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;安装，他会自动的把需要的依赖包一并下载了。到这就完成了对ss的安装。&lt;/p&gt;

&lt;p&gt;在shadowsocks-libev-spec从v1.5.2开始可以使用luci配置界面。所以我就找了一下luci的package，所有的package都在&lt;a href=&quot;https://downloads.openwrt.org/chaos_calmer/15.05/ar71xx/generic/packages/&quot;&gt;packages列表&lt;/a&gt;。luci-app-shadowsocks-spec_1.3.7-1_all.ipk我的叫这个，我就下载了然后继续scp上传，然后&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;opkg install luci-app-shadowsocks-spec_1.3.7-1_all.ipk&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;之后登陆web界面，这时候就有可视化的配置界面了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/openwrt/openwrt.png&quot; alt=&quot;openwrt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;输入你的ss账号密码就可以了。但是需要在最下面添加ignore list，让国内的网站直接连接网络，不然的话像我，就没法看nba直播了，很多视频优酷什么的也不能看了…&lt;/p&gt;

&lt;p&gt;这一步其实是关键的，新建一个后缀为list的文件，然后输入这串命令&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wget -O- &#39;http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest&#39; | awk -F\| &#39;/CN\|ipv4/ { printf(&quot;%s/%d\n&quot;, $4, 32-log($5)/log(2)) }&#39; &amp;gt; /dev/ignore.list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;然后把ignore的路径设置到你配置的那个文件就可以了。&lt;/p&gt;

&lt;p&gt;这时候在开腾讯nba就能看直播了…我简直，为了看球什么都干得出来。然后再连接路由器就可以Jump gfw了~&lt;/p&gt;

&lt;h2 id=&quot;x&quot;&gt;8021x校园网拨号&lt;/h2&gt;
&lt;p&gt;不过我们不用更换源，首先我们需要&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;opkg remove wpad-mini&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;然后&lt;code class=&quot;highlighter-rouge&quot;&gt;opkg install wpad&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;opkg install wpa-cli&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;然后配置8021x的文件就可以上网了。&lt;/p&gt;

&lt;p&gt;因为我走了中继，所以这个没有具体实践到拨号，只实践到安装依赖包。&lt;/p&gt;

&lt;p&gt;具体参考迪哥的博客&lt;a href=&quot;http://cindyfn.com/jiluyou/2015/02/04/ji-lu-you-8021.html&quot;&gt;极路由root并8021x校园网拨号经验分享&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;结尾&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;请合理利用互联网，不要对国家安全造成任何威胁！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section-3&quot;&gt;参考链接&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://wenku.baidu.com/link?url=X8GEcVGOxcygQFB3EmYr1pfvLFbn_JvY4-7aGNoBft2ykQCnd8-yTAVybONuVi7X-dhGqmgIHYKxGyI_v6MlnXxERGFTwGz8h_uSouBK4tS&quot;&gt;Openwrt无线中继教程&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://cindyfn.com/jiluyou/2015/02/04/ji-lu-you-8021.html&quot;&gt;极路由root并8021x校园网拨号经验分享&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/shadowsocks/openwrt-shadowsocks&quot;&gt;openwrt-shadowsocks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.tshine.me/openwrt%E4%B9%8Bshadowsocks%E6%9B%B4%E6%96%B0ignore-list.html&quot;&gt;OpenWRT之Shadowsocks更新ignore.list&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 21 Jan 2016 11:02:00 +0800</pubDate>
        <link>http://walkginkgo.com/linux/2016/01/21/openwrt.html</link>
        <guid isPermaLink="true">http://walkginkgo.com/linux/2016/01/21/openwrt.html</guid>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>念书真的很幸福</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;后面尽量每周都写点东西，这是对自己的要求，也是2016年我想坚持做的一件事情。作为一个要从纯技术人员逐渐转型的人，写作，是记录，也是必需品。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;念书，真的很幸福。&lt;/p&gt;

&lt;p&gt;刚刚和一帆说，你觉不觉得过去的一星期特别累，各种事情。一帆和我说，所以说啊，学习才是最轻松的。&lt;/p&gt;

&lt;p&gt;是啊，这已经不是我第一次觉得，学习轻松。&lt;/p&gt;

&lt;p&gt;从大二加入工作室开始，没课的时候我基本上都会来工作室写代码。因为我们有企业的项目，项目的进度要求非常高，这就意味着你的工作量在增加，需要在有限的时间完成大量的东西，是很难的。&lt;/p&gt;

&lt;p&gt;去年的这个时候，我们做了一个医疗方面的项目，我负责iOS版本医生端全部的开发。因为开发能力加上本身任务量就大，我每天大搞从早上九点就开始开发，中午大概休息两个多小时，然后到晚上九点。这种工作强度，不止一次让我吐血。&lt;/p&gt;

&lt;p&gt;过去的一周，我和一帆接手了工作室。出去玩的疲惫还没缓过来劲又开始各种事情，除了安排没有安排的事情之外，我们还对后面的发展和要做的东西进行了一个计划，整理工作室的很多事情。我们还进行了初期的招新。&lt;/p&gt;

&lt;p&gt;对我个人来说，我得保持自己在一个学习的状态，技术上还需要很多的积累，不仅是对于新技术的学习还是对于已掌握技术的扩展。我还带着肾哥在学习。还和班长姜导去了一趟沙河找老师做比赛。&lt;/p&gt;

&lt;p&gt;过去的一周，我强迫性的让自己早起来面对每天的挑战。平均每天大概在八点多一点点就开始了新的一天。晚上坚持跑步，让自己保持一个好的状态。&lt;/p&gt;

&lt;p&gt;记得玩的时候就说，忙点好，好是好。但是，很累。&lt;/p&gt;

&lt;p&gt;回头来说学习。&lt;/p&gt;

&lt;p&gt;我们总觉得学习很辛苦，学习是很辛苦。但是比起工作强度来说，不那么辛苦，学习的量是一定的，但是我相信没有那么费神。大部分的人选择在最后两星期来准备考试。那么平日里只要计划好，就可以在期末的时候很好的去应对。&lt;/p&gt;

&lt;p&gt;学习的东西是死的，计划和项目是活的。&lt;/p&gt;

&lt;p&gt;因为你不知道未来会发生什么，所以你总在害怕去面对。&lt;/p&gt;

&lt;p&gt;过去的一星期里，我把我的大部分精力都放在了工作室上，每天晚上会考虑后面的发展，会考虑还有哪些事情没做。如果过去的一周是考试周，我只需要计划我的复习就可以了。这个其实不是很难。&lt;/p&gt;

&lt;p&gt;大学的学习，充满着不确定性和时间。所以剩下的时间该怎么做，是需要去规划的。正是这种不确定性，决定了你是否会累与不累。&lt;/p&gt;

&lt;p&gt;读书的时候，除了学习之外，你有大量的时间去做除了学习之外的事情。你可以出去玩，可以选择去写代码，当然你也可以选择去堕落。&lt;/p&gt;

&lt;p&gt;这都没什么。&lt;/p&gt;

&lt;p&gt;我总在强调好好学习，好好学习是因为未来的选择会更多。技术又好，成绩又好能保研，那么未来都是光明的。&lt;/p&gt;

&lt;p&gt;好好学习，不挂科，可以让你有足够的精力去面对前面的困难，而不是挂科来影响你的心情。这大概就是好好学习的意义吧。&lt;/p&gt;

&lt;p&gt;我总在说好好学习，最后我连自己都做不到。&lt;/p&gt;

&lt;p&gt;所以呢？为什么念书好幸福？&lt;/p&gt;

&lt;p&gt;因为你可以追求你所想的，一旦工作，你没了金钱的来源，你有了生活的压力，你所追求的，就不能是纯粹的情怀了。&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Jan 2016 11:20:00 +0800</pubDate>
        <link>http://walkginkgo.com/life/2016/01/09/study.html</link>
        <guid isPermaLink="true">http://walkginkgo.com/life/2016/01/09/study.html</guid>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>创业和情怀</title>
        <description>&lt;p&gt;有一天静姐问我，你说你想创业，是为了什么想去创业。&lt;/p&gt;

&lt;p&gt;为了情怀。（很显然我不是这么回答的，原版回答在最后）&lt;/p&gt;

&lt;p&gt;为什么说为了情怀，因为我觉得我的回答虽然是发自内心的，但是实在是看上去太假。我只能概括为为了情怀。那天和我妈说这个，我妈说，你竟捡大的哈（身为我妈，这么回答我我实在是太伤心了，我妈不应该全世界都不支持我她支持我嘛？？）我就当我妈理解不了，我妈没情怀。&lt;/p&gt;

&lt;p&gt;情怀这个词，大概是从老罗开始要做锤子手机开始风靡互联网。老罗的精神，工匠精神，他们有情怀，更多是对产品有情怀。确实看锤子的手机发布会，会觉得，这个手机，值。迪哥都说，人老罗卖情怀人能卖掉，你能卖掉吗？&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;情怀，什么是情怀？&lt;/h2&gt;

&lt;p&gt;我现在是学生党，喜欢技术，做iOS开发。我们开发会用到很多很牛逼很牛逼的库，简直，每次用我都有感叹一下。你可以看到facebook开源的pop，你可以看到twitter开源的bootstrap。我实在是觉得，太牛逼了。难以言表。&lt;/p&gt;

&lt;p&gt;而且这些库，极度的成熟。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;这和情怀有什么关系？&lt;/h2&gt;

&lt;p&gt;有大了关系了。你见过我们国家大的互联网公司开源像bootstrap那么厉害的库没？我没。可能是我没关注到，但至少github每天的trending我没见着BAT的库。前段时间阿里开源了他们热更新的库，还是在fork别人代码的基础上来继续维护的。&lt;/p&gt;

&lt;p&gt;其实大家心里都明白。BAT的实力，不在facebook之下，阿里一个双12的技术，绝对是世界顶尖的。没啥好质疑的。我从来没说这些公司不好。我只是觉得他们这些公司，应该做的更好。阿里里面有很多人为hadoop贡献代码。但是我觉得他们的能力，应该是引导一个开源项目。而不是仅仅的贡献代码。&lt;/p&gt;

&lt;p&gt;我写博客的初衷，就是想回馈iOS开发这个大社区，我想贡献我自己的力量，我的实力虽然不那么好，但是教教慎哥这样的还是可以的。&lt;/p&gt;

&lt;p&gt;我说我是为了情怀写博客太假，这么说就不假了吧。但是想想其实是一个意思对吧。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;记不得之前谁和我说了，中国这些公司，都是钱驱动的。&lt;/h2&gt;

&lt;p&gt;记不得之前谁和我说了，中国这些公司，都是钱驱动的。&lt;/p&gt;

&lt;p&gt;我到现在都没说中国的互联网公司不好。小道消息的冯老师，从支付宝跳槽去了丁香医生。丁香医生，是我觉得现在做医学方面常识普及甚至用药最好的应用。我不知道冯老师为什么去丁香园，但至少，我觉得冯老师有情怀。&lt;/p&gt;

&lt;p&gt;说句实话，丁香医生，做的真的很好，它能够让真正的医生来科普一系列生活方面医学方面很接近我们的东西。这就很好啊，这是为了人类的生活做了极大贡献的。不觉得很有情怀吗？&lt;/p&gt;

&lt;p&gt;说到这，不得不提百度和谷歌。&lt;/p&gt;

&lt;p&gt;搜片的时候，谷歌会把你屏蔽了，百度呢？百度全家桶的规模远超肯德基全家桶。&lt;/p&gt;

&lt;p&gt;用室友写报告的时候话来说，百度，就是有市场啊。&lt;/p&gt;

&lt;p&gt;是啊，中国那么多程序员用百度。中国那么多学生需要百度文库来写报告。是啊，百度一定有市场。&lt;/p&gt;

&lt;p&gt;谷歌呢？虽然我不得不服，有时候搜中文，谷歌不如百度。但举个最简单的东西，谷歌前段时间开源了他们数据分析的一个东西，虽说网上吐槽的很多。百度你开源一个？谷歌没广告百度你来一个？&lt;/p&gt;

&lt;h2 id=&quot;facebookoffer&quot;&gt;如果facebook给我发offer，今天发，我明天就走&lt;/h2&gt;

&lt;p&gt;有一天，我和慎哥说，如果facebook给我发offer，今天发，我明天就走。&lt;/p&gt;

&lt;p&gt;后来没多久，扎克伯格就把自己的99%股份捐出去了。于是乎我决定，facebook今天给我发offer，我今天就走。真的。&lt;/p&gt;

&lt;p&gt;扎克伯格把钱用在了医学研究方面。上次看到有人说，这个不是一朝一夕可以解决的，需要一个长的阶段。扎克伯格说了，我希望我女儿那时候会好起来。&lt;/p&gt;

&lt;p&gt;不觉得扎克伯格很有情怀吗？&lt;/p&gt;

&lt;p&gt;为人类的事业做贡献。听着好伟大，但是好假，但是确实又是真的。&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;中国的大部分互联网公司和创业者，思考的方式是反的&lt;/h2&gt;

&lt;p&gt;他们都在想，我们要为了钱创业。&lt;/p&gt;

&lt;p&gt;但事实上。当你有了一款好的产品，钱自然就来了。&lt;/p&gt;

&lt;p&gt;但是呢，我知道创业者都苦，没钱还累。程序员本来就是高薪职业是吧，不拿钱苦逼的创业。都不愿意。所以呢，迫于很多压力，创业变成了为了钱。&lt;/p&gt;

&lt;p&gt;做好的产品。什么是好的产品？好的产品一定要有盈利点吗？&lt;/p&gt;

&lt;p&gt;思考又是反的。&lt;/p&gt;

&lt;p&gt;只有好的产品会带来大量的用户量，用户量到了，钱自然也就到了。而不是有盈利点所以才有钱。&lt;/p&gt;

&lt;p&gt;做好的产品，什么是好的产品。BAT选择了搜索，购物，聊天。&lt;/p&gt;

&lt;p&gt;方便人类生活的才是好的产品。&lt;/p&gt;

&lt;p&gt;为人类进步做出贡献的一定是好产品。&lt;/p&gt;

&lt;p&gt;但是我可能没那么大的实力去能为人类进步做贡献。但是我至少可以努力方便人类的生活。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;所以&lt;/h2&gt;

&lt;p&gt;我要做有情怀的人所以我决定不考虑钱去认真的尝试去做一些东西。&lt;/p&gt;

&lt;p&gt;所以决定了一些事情，这是后话。&lt;/p&gt;

&lt;p&gt;所以，钱嘛，迟早都会有的，情怀可不是所有人都有的。&lt;/p&gt;

&lt;p&gt;所以，创业，是为了情怀啊。&lt;/p&gt;

&lt;p&gt;所以，我觉得我这么有情怀的人不创业可惜了。&lt;/p&gt;

&lt;p&gt;我们都是有情怀的人，但是不能空谈情怀。我们都是要干大票的人，怎么能没有情怀？&lt;/p&gt;

&lt;p&gt;情怀，不是用钱买的。情怀，也不是用来卖的。&lt;/p&gt;

&lt;p&gt;情怀是用来让生活更美好的。&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;我给静姐的回答&lt;/h2&gt;

&lt;p&gt;我说，以前想创业，是觉得创业很厉害，能做点很厉害的东西。后来想创业，觉得大公司饱和，没有什么发展的前景。现在算是彻底想明白了，想为了人类的生活更便利做点贡献。&lt;/p&gt;

&lt;h2 id=&quot;section-6&quot;&gt;最后的最后&lt;/h2&gt;

&lt;p&gt;创业，不是为了钱，是为了情怀。&lt;/p&gt;

&lt;p&gt;顺序不能反了。&lt;/p&gt;

&lt;p&gt;先有情怀，自然有钱。&lt;/p&gt;

&lt;p&gt;先考虑钱，情怀可是会打折的哦😘&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Dec 2015 20:00:00 +0800</pubDate>
        <link>http://walkginkgo.com/life/2015/12/19/feelings.html</link>
        <guid isPermaLink="true">http://walkginkgo.com/life/2015/12/19/feelings.html</guid>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>iOS开发模式MVVM 2分离业务逻辑</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;习惯性的废话&lt;/h2&gt;
&lt;p&gt;好的，作死的我不复习来写博客了。下星期要开始进入8成全面复习了。&lt;/p&gt;

&lt;p&gt;我知道很多人想看八卦是吧。。我也想写写我最近在干什么，为什么看上去那么忙，动态也有一段时间没更新。有时间写博客在说吧。&lt;/p&gt;

&lt;p&gt;因为项目基本上结束，所以有时间研究mvvm，当然我还在学swift。学swift的原因是，它开源了。当然后面还安排了看一部分源码。期待后面满满干货的博客吧！&lt;/p&gt;

&lt;p&gt;上次博客说了。我们的ViewModel到底在干啥，两件事情，网络请求，逻辑实现。当然，ViewModel不会那么简单。但是，我们先实现这两个。&lt;/p&gt;

&lt;p&gt;那么来吧。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我想大多初始化定义的代码都能看懂，也没有叙述的必要，我主要把我觉得最主要的几个部分叙述一下。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;protocol&quot;&gt;代理 Protocol&lt;/h2&gt;
&lt;p&gt;为什么先说代理。这也是之前和慎哥也说过cell里面有点击事件怎么写。（不知道这么写对不对…后面看一部分源码之后会再聊这个话题，先留坑）代理可以干什么，跨Controller传值。跨Controller调方法。&lt;/p&gt;

&lt;p&gt;我们之前写代理，都是在某个Controller里的.h文件最上面创建代理。但实际上，Xcode提供了专门的Protocol文件。之前没有搞明白也是因为我觉得代理必须要再某个文件里声明。&lt;/p&gt;

&lt;p&gt;所以，当我们单独声明了一个Protocol文件的时候，就意味着，这个Protocol可以像一个类一样来声明变量了。&lt;/p&gt;

&lt;h2 id=&quot;raccommand&quot;&gt;RACCommand&lt;/h2&gt;
&lt;p&gt;这个东西是做啥的。我只能说我解释不好，因为我没有完全理解这个东西。我只能把我理解的说出来。&lt;/p&gt;

&lt;p&gt;我们的按钮都有一个点击事件。当点击的时候出发一个函数。&lt;/p&gt;

&lt;p&gt;但是，当我们用了RACCommand的时候，我们的点击事件就可以这么写了。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pushBtn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rac_command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RACCommand&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initWithSignalBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RACSignal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;test signal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RACSignal&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;和我之前写过的这种写法又不一样了。这种写法其实是对button addtarget那个方法的一个rac式的封装。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testBtn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rac_signalForControlEvents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIControlEventTouchUpInside&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
                            &lt;span class=&quot;nf&quot;&gt;subscribeNext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TestViewController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testVC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestViewController&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;navigationController&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pushViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testVC&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;用第一种方法的原因呢，我们可以把点击事件赋值成为一个RACCommand类型的属性。既然可以变成一个属性了，那么就可以重新定义并且赋值。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;分离点击事件&lt;/h2&gt;
&lt;p&gt;我们新建一个FirstViewModel，在FirstViewModel.h中增加一个&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RACCommand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;excutePush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;然后我们让刚刚在FirstViewController里定义的那个pushBtn的rac_command，将它赋值为FirstViewModel里的excutePush&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;self.pushBtn.rac_command = self.viewModel.excutePush;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这么一赋值，就达成了一个目的。按钮的事件在viewModel中执行。&lt;/p&gt;

&lt;p&gt;需要注意的是，RACCommand的block返回的时一个signal。所以，在viewModel中，我们要这么写&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;    &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;excutePush&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RACCommand&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initWithSignalBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RACSignal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;test signal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RACSignal&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这样，我们就实现了对点击事件的分离。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;分离跳转&lt;/h2&gt;
&lt;p&gt;分离跳转，就要用到我开始说的代理了。
我们做一个MVVMdemoService的代理，我放在Protocol文件夹里了。这个代理就声明了一个方法&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;- (void)pushViewModel:(id)viewModel;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;我们在NSLog(@”test signal”);下面增加&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[self.service pushViewModel:viewModel];&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;我们还要实现这个代理。&lt;/p&gt;

&lt;p&gt;在ray中的&lt;a href=&quot;http://www.raywenderlich.com/74106/mvvm-tutorial-with-reactivecocoa-part-1&quot;&gt;教程&lt;/a&gt;和雷大神的&lt;a href=&quot;https://github.com/leichunfeng/MVVMReactiveCocoa&quot;&gt;MVVMReactiveCocoa&lt;/a&gt;都是新建了一个Impl文件，专门用来跳转，基本思路就是navigation本身就是一个堆栈，其实所有的vc都是在navigation其中的。我们只要控制这个这个最基本的navigation的跳转就可以了。&lt;/p&gt;

&lt;p&gt;我们新建一个MVVMdemoImpl文件，里面有一个初始化的方法。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;- (instancetype)initWithNavigationController:(UINavigationController *)navigationController&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;我们把根navigation传进去来进行逻辑跳转。&lt;/p&gt;

&lt;p&gt;我们在初始化的时候加上这两句核心代码。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;self.demoImpl = [[MVVMdemoImpl alloc] initWithNavigationController:self.naviVC];
self.firstViewModel = [[FirstViewModel alloc] initWithService:self.demoImpl];
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第一句话是声明了一个demoImpl，将navigation穿进去。
第二句话是声明了一个firstViewModel，把第一个demoImpl传了进去。这个地方的疑问在于，我们声明的时候是&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-(instancetype)initWithService:(id&amp;lt;MVVMdemoService&amp;gt;)service&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;参数是一个代理。我们传的时一个NSObject类型的值。而且在MVVMdemoImpl.m中，也没有对于代理的赋值为自己。&lt;/p&gt;

&lt;p&gt;我是这么理解的，如果有不对，还请谅解。&lt;/p&gt;

&lt;p&gt;当我们加入代理MVVMdemoService在MVVMdemoImpl的时候，因为MVVMdemoImpl是一个nsobject类型，而MVVMdemoService也是一个nsobject类型。所以，此时我们的MVVMdemoImpl具有MVVMdemoService的属性了，我们做的就是，让FirstViewModel里的service的代理即是MVVMdemoImpl。&lt;/p&gt;

&lt;p&gt;简单的说。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;就是MVVMdemoImpl == FirstViewModel.service&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;那么这样的话，我们的service就可以执行MVVMdemoImpl里的pushViewModel方法了。&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;小结&lt;/h2&gt;
&lt;p&gt;其实上面的最后AppDelegate的赋值代理这一块还不是很明白。有时间再说说吧。好久没写博客就想发一篇了。&lt;/p&gt;

&lt;p&gt;以上完整代码在&lt;a href=&quot;https://github.com/judi0713/MVVMdemo&quot;&gt;MVVMdemo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;参考链接&lt;/h2&gt;

&lt;p&gt;1.&lt;a href=&quot;https://github.com/leichunfeng/MVVMReactiveCocoa&quot;&gt;leichunfeng/MVVMReactiveCocoa&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.&lt;a href=&quot;http://codeblog.shape.dk/blog/2013/12/05/reactivecocoa-essentials-understanding-and-using-raccommand/&quot;&gt;ReactiveCocoa Essentials: Understanding and Using RACCommand&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.&lt;a href=&quot;http://stackoverflow.com/questions/19440683/why-does-raccommands-block-return-a-signal&quot;&gt;Why Does RACCommand’s block return a signal?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.&lt;a href=&quot;http://www.raywenderlich.com/74106/mvvm-tutorial-with-reactivecocoa-part-1&quot;&gt;MVVM Tutorial with ReactiveCocoa: Part 1/2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最后的最后，有些事情，我自己不愿去努力去争取我谁也不怪。有些事情我想的很明白我一点都不想想明白。&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Dec 2015 16:01:08 +0800</pubDate>
        <link>http://walkginkgo.com/ios/2015/12/12/ios-mvvm-2.html</link>
        <guid isPermaLink="true">http://walkginkgo.com/ios/2015/12/12/ios-mvvm-2.html</guid>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>Mac升级10.11 EI Captain 填坑</title>
        <description>&lt;p&gt;上周日更新了新版的Mac OS 10.11 EI Captain，上午在工作室升级Xcode7还有keynote等等，下午安装操作系统和各种倒腾。最后发现时间都浪费在下午软件不能正常安装上了。特此写篇博客记录一下整个填更新的填坑过程。&lt;/p&gt;

&lt;p&gt;其实我是很反对更新的，一更新就得踩坑，但是强迫症患者没法看到有更新不去更。&lt;/p&gt;

&lt;p&gt;下面开始正文。&lt;/p&gt;

&lt;h2 id=&quot;homebrew&quot;&gt;1. homebrew不能使用&lt;/h2&gt;

&lt;p&gt;homebrew本身是需要Xcode的command line的，而新版的Xcode7，应该是会把之前的command line删除了..所以即使你用&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer&lt;/code&gt;但是你还是没有办法使用homebrew，你在使用homebrew的时候，不论什么命令，都是&lt;code class=&quot;highlighter-rouge&quot;&gt;Failure while executing: /usr/bin/otool -L /usr/bin/install_name_tool&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;当然，有&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo xcodebuild -license&lt;/code&gt;的原因，就是你没有同意xcodebuild的license。当然这些我都试了。还是不行，后来查查发现是command line没有选中的原因。&lt;/p&gt;

&lt;p&gt;解决方法：首先&lt;code class=&quot;highlighter-rouge&quot;&gt;xcode-select -p&lt;/code&gt;一般默认是&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer&lt;/code&gt;
但是Xcode7你需要切换到/Library/Developer/CommandLineTools，这时候就好了。&lt;/p&gt;

&lt;p&gt;很多人的homebrew不能用是因为权限问题，在使用homebrew doctor的时候会提醒你。这点就不说了。&lt;/p&gt;

&lt;h2 id=&quot;xtrafinder&quot;&gt;2. Xtrafinder不能使用&lt;/h2&gt;

&lt;p&gt;Xtrafinder更新完之后会提醒你怎么做，这就是苹果的rootless机制导致的，开开就OK了。&lt;/p&gt;

&lt;p&gt;我想说的就是Xtrafinder会挡住finder一部分，前天好像已经出了更新，但是源没有换，所以还是0.25.6版本。V2ex上有人问了，大家都一样，不是电脑的问题所以不要着急。&lt;/p&gt;

&lt;h2 id=&quot;gem&quot;&gt;3. gem更新&lt;/h2&gt;

&lt;p&gt;gem安装的东西，反正我的是都没了…因为苹果把/usr (except /usr/local)里的东西都再见了。需要把gem的默认安装路径重新设置一下。
所以我的rails还有博客的jekyll，当然，还有我的cocoapods都挂了。需要重新安装。&lt;/p&gt;

&lt;p&gt;网上好多方法，说自定义GEM_HOME等等。我觉得都不太好，在stackoverflow上看到一个方法很好，分享一下。&lt;/p&gt;

&lt;p&gt;打开terminal修改~/.gemrc&lt;/p&gt;

&lt;p&gt;增加&lt;code class=&quot;highlighter-rouge&quot;&gt;gem: -n/usr/local/bin&lt;/code&gt;这样就把gem的默认安装环境换到了/usr/local/bin下，这样更新gem就没问题了。&lt;/p&gt;

&lt;h2 id=&quot;xcodealcatrazwindow&quot;&gt;4.Xcode的Alcatraz不在window下显示&lt;/h2&gt;

&lt;p&gt;也就自己的Mac作大死解决这个问题。&lt;/p&gt;

&lt;p&gt;网上有很多在github提issue，我看了很多，对着做了很多。里面说的都很详细，在此不贴，最后面有链接。&lt;/p&gt;

&lt;p&gt;基本上原因就是，你的Alcatraz没有加入Xcode的UUID。&lt;/p&gt;

&lt;p&gt;这里说明一下，每个Xcode版本的UUID不一样，所以最好的方法是先获取Xcode的UUID。&lt;/p&gt;

&lt;p&gt;命令是&lt;code class=&quot;highlighter-rouge&quot;&gt;defaults read /Applications/Xcode.app/Contents/Info DVTPlugInCompatibilityUUID&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;最后加到一个plist文件然后重启Xcode就可以了，大部分都是这样解决了。&lt;/p&gt;

&lt;p&gt;当然，我用这个方法没有解决。万念俱灰下，重新用了百度..想看看国内人怎么解决的，记不得在cocoachina还是csdn看到一个人说，那些方法我都没有，我把Alcatraz下载下来运行了一下就ok了…&lt;/p&gt;

&lt;p&gt;于是乎，我上github上下载了Alcatraz，运行了一下。。我也ok了。。&lt;/p&gt;

&lt;p&gt;基本上遇到的大坑就这几个，踩完也没啥了。&lt;/p&gt;

&lt;p&gt;但是我app store更新完新版本的Xcode7之后再安装Xcode6，app store就会更新我的Xcode6..而且我的homebrew也是只能识别我的Xcode6了…我一直无法解决。还有我的XQuartz一直显示过期也没法解决。简直，强迫症。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;最后唠两句。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;最近为啥没更新博客，我会说我同时写了几份代码么…完全没有时间。。
最近的心凉的很透彻。晚上看着微信洗脸。唉，说好了四星期之后做点其他事情，这都五星期了，还在写代码。在意的东西太多，不放弃一些永远只能这样。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;还有，暂时是决定考研了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;有些事情，唉，就这了，没戏的事情总在想也没啥意义..还是忙一忙充实充实就不想了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section&quot;&gt;参考链接&lt;/h2&gt;

&lt;p&gt;1.&lt;a href=&quot;http://guojianxiang.com/posts/2015-10-06-Update_OSX_EI_Captain_Problems.html&quot;&gt;关于 OSX 升级到 EI Captain 的解决方案&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.&lt;a href=&quot;https://github.com/Homebrew/homebrew/issues/44071&quot;&gt;Failure while executing: /usr/bin/otool -L /usr/bin/install_name_tool&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.&lt;a href=&quot;http://stackoverflow.com/questions/17980759/xcode-select-active-developer-directory-error-on-osx-mavericks&quot;&gt;xcode-select active developer directory error on OSX Mavericks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.&lt;a href=&quot;http://stackoverflow.com/questions/31972968/cant-install-gems-on-macos-x-el-capitan&quot;&gt;Can’t install gems on MacOS X “El Capitan”&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Nov 2015 03:54:59 +0800</pubDate>
        <link>http://walkginkgo.com/mac/2015/11/19/mac-eicaptain.html</link>
        <guid isPermaLink="true">http://walkginkgo.com/mac/2015/11/19/mac-eicaptain.html</guid>
        
        
        <category>mac</category>
        
      </item>
    
  </channel>
</rss>
