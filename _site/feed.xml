<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iWalk's Blog</title>
    <description>我是新手程序员，想找一个地方记录自己在技术上的成长和生活上的点滴。 现在主要是跟随迪哥做iOS的开发。 寒假想看一些前端的知识。 我的jekyll还在搭建过程当中！我会逐渐将我的jekyll美化起来的。
</description>
    <link>judi0713.github.io/</link>
    <atom:link href="judi0713.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 25 Feb 2015 23:44:12 +0800</pubDate>
    <lastBuildDate>Wed, 25 Feb 2015 23:44:12 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>关于前端文本编辑器的废话和Emmet部分文档说明</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;第一部分：关于前端文本编辑器的废话（可直接略过）&lt;/h3&gt;
&lt;p&gt;因为寒假看了一点点前端的东西。一开始在挑文本编辑器。首先想到的是linux下的vim。后来硬是把vim下安装插件的vundle都研究了一遍，没有找到的好的js自动补全功能的配置和插件。在我纠结了三四天之后，我决定放弃vim。(好像有人用emacs这种编辑器之神写前端，我实在是不想尝试了…有机会会研究一下emacs的)。&lt;/p&gt;

&lt;p&gt;其次的选择就是sublime了。CM基本上清一色sublime。从Python到前端，还有angularjs。Sublime基本完成了大一统。但是我在写js的时候发现它对js自动补全的支持没有那么好。（可能是我插件没怎么安装，懒得倒腾了）主要我xcode用多了。依依不舍别过sublime。&lt;/p&gt;

&lt;p&gt;接着就是搜索了一下前端的编辑器。Github的Atom，那玩意写markdown倒是不错。自动补全功能，感觉就好像没有自动补全功能。插件功能未实验。&lt;/p&gt;

&lt;p&gt;Jetbrains系列，有个webstorm。Jetbrains系列都要钱，虽然学生免费。放弃。但是jetbrain系列确实好用啊，良心，毕竟收费。&lt;/p&gt;

&lt;p&gt;Notepad++，放弃。Notepad++适合看代码。&lt;/p&gt;

&lt;p&gt;Lighttable，lighttable其实还不错，和sublime已经很相似了。但是对js的一些方法的补全没有那么好。Lighttable是ClojureScript写的的，很厉害。&lt;/p&gt;

&lt;p&gt;最后挑来挑去挑到adobe的brackets。在写js函数的时候终于有自动补全了啊我好开心。
然后就是装了一些插件，后文会附上我用的插件列表。装插件的时候发现了第二部分的主题。Emmet。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-1.jpg&quot; alt=&quot;brackets-emmet-1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;emmet&quot;&gt;第二部分：Emmet部分文档说明&lt;/h3&gt;
&lt;p&gt;第二部分的文章，将基于上图来阐述。我将会介绍在brackets下，我截图的emmet菜单里所有功能的用途和使用。
这些emmet的功能看上去复杂，其实很简单，我会一一说明，如果你是sublime的用户，你也可以参考我的文章，也可以参考emmet在github上的主页，sublime的emmet插件在github上有连接对应到emmet官方的文档。Emmet官方的文档是带有效果图的，可以方便理解它的功能。（sublime用户的emmet顺序可能和brackets不同，但是具备的功能大多相似）
我这里再次进行阐述的意义，一在于方便我个人以后查阅，二是我在此过程中再次熟悉一下里面的各项功能。
一下所有内容基于brackets。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;开始&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;首先介绍一下简单emmet使用，举个简单的例子，我在brackets下输入&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-2.png&quot; alt=&quot;brackets-emmet-2&quot; /&gt; 
之后按下tab键，会出现&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-3.png&quot; alt=&quot;brackets-emmet-3&quot; /&gt;极大减轻了代码量。
具体使用方法&lt;a href=&quot;http://docs.emmet.io/cheat-sheet/&quot;&gt;参见&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.emmet.io/&quot;&gt;官方文档地址&lt;/a&gt;  里面有很少的地方不能完全对应官方的文档，差别很小。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;然后是介绍brackets里的功能。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Previous editor point &amp;amp;&amp;amp; next edit point 对应文档 Go to Edit Point &lt;a href=&quot;http://docs.emmet.io/actions/go-to-edit-point/&quot;&gt;连接&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;到达之前的编辑点，到达下一个编辑点。&lt;/p&gt;

&lt;p&gt;举个例子，现在输入&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-4.png&quot; alt=&quot;brackets-emmet-4&quot; /&gt;按下tab&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-5.png&quot; alt=&quot;brackets-emmet-5&quot; /&gt;
如果此时光标在&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-6.png&quot; alt=&quot;brackets-emmet-6&quot; /&gt;那么按下next edit point会到达&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-7.png&quot; alt=&quot;brackets-emmet-7&quot; /&gt;
再按下next edit point会到达下一个class里。同理，如果此时按下Previous editor point，会到达第一个class里。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Evaluate math expression 对应文档 Evaluate Math Expression &lt;a href=&quot;http://docs.emmet.io/actions/evaluate-math/&quot;&gt;连接&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;计算数学表达式。&lt;/p&gt;

&lt;p&gt;这个主要是计算css。举个例子 ，输入&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-8.png&quot; alt=&quot;brackets-emmet-8&quot; /&gt;然后按下快捷键，会得到&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-9.png&quot; alt=&quot;brackets-emmet-9&quot; /&gt;。
可以进行多重的加减乘除。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Expand abbreviation 对应文档 Expand Abbreviation &lt;a href=&quot;http://docs.emmet.io/actions/expand-abbreviation/&quot;&gt;连接&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这个就是对应我们的tab键，最主要的emmet功能。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Balance(inward)&amp;amp;&amp;amp; Balance(outward) 对应文档 Match Tag Pair &lt;a href=&quot;http://docs.emmet.io/actions/match-pair/&quot;&gt;连接&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当我的光标处在&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-10.png&quot; alt=&quot;brackets-emmet-10&quot; /&gt;时，按下Balance(outward)，此时会选中所有的&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-11.png&quot; alt=&quot;brackets-emmet-11&quot; /&gt;，再按下Balance(outward)，会选中&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-38.png&quot; alt=&quot;brackets-emmet-38&quot; /&gt;整个&amp;lt;li&amp;gt;标签，再按下Balance(outward)，会选中&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-12.png&quot; alt=&quot;brackets-emmet-12&quot; /&gt;，再按下Balance(outward)，会选中全部的内容。Balance(inward)正好是反过来选择，我就不详细叙述了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Go to matvhing tag pair 对应文档Go to Matching Pair &lt;a href=&quot;http://docs.emmet.io/actions/go-to-pair/&quot;&gt;连接&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;到达对应的标签。&lt;/p&gt;

&lt;p&gt;当我的光标在&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-13.png&quot; alt=&quot;brackets-emmet-13&quot; /&gt;时，按下Go to matvhing tag pair，光标会到达&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-14.png&quot; alt=&quot;brackets-emmet-14&quot; /&gt;， 对应标签的最前面。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Merge line 对应文档 Merge Lines &lt;a href=&quot;http://docs.emmet.io/actions/merge-lines/&quot;&gt;连接&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;合并行。 &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-15.png&quot; alt=&quot;brackets-emmet-15&quot; /&gt;光标如红线。 按下快捷键，会&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-16.png&quot; alt=&quot;brackets-emmet-16&quot; /&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reflect value 对应文档 Reflect CSS Value &lt;a href=&quot;http://docs.emmet.io/actions/reflect-css-value/&quot;&gt;连接&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;统一调整css数值。
借用官方的例子。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-17.png&quot; alt=&quot;brackets-emmet-17&quot; /&gt;现在&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-18.png&quot; alt=&quot;brackets-emmet-18&quot; /&gt;光标在红线，按下快捷键，&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-19.png&quot; alt=&quot;brackets-emmet-19&quot; /&gt;全部调整为50。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remove tag 对应文档 Remove Tag &lt;a href=&quot;http://docs.emmet.io/actions/remove-tag/&quot;&gt;连接&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;删除标签。&lt;/p&gt;

&lt;p&gt;将光标移植要删除的标签内，&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-20.png&quot; alt=&quot;brackets-emmet-20&quot; /&gt;，按下快捷键，&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-21.png&quot; alt=&quot;brackets-emmet-21&quot; /&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Select next itm&amp;amp;&amp;amp;select previous item 对应文档 Select Item &lt;a href=&quot;http://docs.emmet.io/actions/select-item/&quot;&gt;连接&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-22.png&quot; alt=&quot;brackets-emmet-22&quot; /&gt;光标如红点，按下Select next itm，会选中整个html标签&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-23.png&quot; alt=&quot;brackets-emmet-23&quot; /&gt;，再按下，选中整个div标签&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-24.png&quot; alt=&quot;brackets-emmet-24&quot; /&gt;，再按下，到p标签。select previous item相反。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Split/join tag declaration 对应文档 Split/Join Tag &lt;a href=&quot;http://docs.emmet.io/actions/split-join-tag/&quot;&gt;连接&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;分开/合并标签&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-25.png&quot; alt=&quot;brackets-emmet-25&quot; /&gt;光标在标签内，按下快捷键，&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-26.png&quot; alt=&quot;brackets-emmet-26&quot; /&gt;，再按一次&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-27.png&quot; alt=&quot;brackets-emmet-27&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Toggle comment 对应文档 Toggle Comment &lt;a href=&quot;http://docs.emmet.io/actions/toggle-comment/&quot;&gt;连接&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;注释&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-28.png&quot; alt=&quot;brackets-emmet-28&quot; /&gt;光标位置，按下快捷键，&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-29.png&quot; alt=&quot;brackets-emmet-29&quot; /&gt;。
&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-30.png&quot; alt=&quot;brackets-emmet-30&quot; /&gt;光标位置，按下快捷键，&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-31.png&quot; alt=&quot;brackets-emmet-31&quot; /&gt; 。
就是两个tag之间的。另，在brackets里，按下ctrl+/是光标所在单行注释。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wrap with abbreviation 对应文档 Wrap with Abbreviation &lt;a href=&quot;http://docs.emmet.io/actions/wrap-with-abbreviation/&quot;&gt;连接&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;添加新的emmet。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-32.png&quot; alt=&quot;brackets-emmet-32&quot; /&gt;按下快捷键（我的快捷键和qq冲突了…我用的点击）&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-33.png&quot; alt=&quot;brackets-emmet-33&quot; /&gt;
出现一个这个。输入html&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-34.png&quot; alt=&quot;brackets-emmet-34&quot; /&gt;。添加了一段新的html标签。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update tag 对应文档 未找到&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;更新标签&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-35.png&quot; alt=&quot;brackets-emmet-35&quot; /&gt;按下快捷键输入&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-36.png&quot; alt=&quot;brackets-emmet-36&quot; /&gt;,&lt;img src=&quot;/images/brackets-emmet/brackets-emmet-37.png&quot; alt=&quot;brackets-emmet-37&quot; /&gt; 。&lt;/p&gt;

&lt;p&gt;下面的连续六个和数值有关的是在css里面遇到数值的时候，可以调节数值大小，我就不具体阐述了。对应文档 Increment/Decrement Number 对应&lt;a href=&quot;http://docs.emmet.io/actions/inc-dec-number/&quot;&gt;连接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Brackets最后一个expand abbreviation (interactive)是出现输入框，添加emmet缩写的。&lt;/p&gt;

&lt;p&gt;这是回学校前最后一篇技术博客。&lt;/p&gt;

&lt;p&gt;后期的计划可能会明天发出，就这样。&lt;/p&gt;

&lt;p&gt;希望你能留个言捧个场~&lt;/p&gt;
</description>
        <pubDate>Wed, 25 Feb 2015 23:10:08 +0800</pubDate>
        <link>judi0713.github.io/%E5%89%8D%E7%AB%AF/2015/02/25/brackets-emmet.html</link>
        <guid isPermaLink="true">judi0713.github.io/%E5%89%8D%E7%AB%AF/2015/02/25/brackets-emmet.html</guid>
        
        
        <category>前端</category>
        
      </item>
    
      <item>
        <title>帮老妈做的ppt，可被用为模版(原创)</title>
        <description>&lt;p&gt;因为老妈的学校要做ppt，就帮老妈做了一点简单的动画效果。&lt;/p&gt;

&lt;p&gt;现在把ppt放出来，里面素材都是原创的，因为老妈是带小学的，所以用画线的方式画了六个数字，然后加了一些其他的元素，每一张都是画线的方式。总体来说动画效果还是能凑合凑合用的。&lt;/p&gt;

&lt;p&gt;本来想上传动态gif方便你看效果的，但是我好像处理的不对，没把ppt格式转化为gif。你就将就着看图，下载下来看效果吧。下载地址在最后。&lt;/p&gt;

&lt;p&gt;另外说几句个人的看法，上大学之后确实接触到了很多ppt方面的东西。一开始也用了一些时间看了prezi，但是prezi的动画效果有点单一了，而且个人感觉prezi对ps的要求比ppt还高。&lt;/p&gt;

&lt;p&gt;后来就一直在用ppt了。ppt把动画做好还是需要一定技巧的。&lt;/p&gt;

&lt;p&gt;我是渣渣。&lt;/p&gt;

&lt;p&gt;再次特别感谢洋哥提供给我很多素材和指导~~&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;BTW.&lt;/p&gt;

  &lt;p&gt;假设动画效果可以用的前提下，色彩搭配还得你亲自来。我想物色一个会配色的姑娘，如果你有好的，请介绍给我。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;不多说了上图了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-1.GIF&quot; alt=&quot;ppt-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-2.GIF&quot; alt=&quot;ppt-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-3.GIF&quot; alt=&quot;ppt-3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-4.GIF&quot; alt=&quot;ppt-4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-5.GIF&quot; alt=&quot;ppt-5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-6.GIF&quot; alt=&quot;ppt-6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-7.GIF&quot; alt=&quot;ppt-7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-8.GIF&quot; alt=&quot;ppt-8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-9.GIF&quot; alt=&quot;ppt-9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-10.GIF&quot; alt=&quot;ppt-10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-11.GIF&quot; alt=&quot;ppt-11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-12.GIF&quot; alt=&quot;ppt-12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-13.GIF&quot; alt=&quot;ppt-13&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ppt/ppt-14.GIF&quot; alt=&quot;ppt-14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下载地址：&lt;a href=&quot;http://walkginkgo.com/images/ppt/num-ppt.pptx&quot;&gt;num-ppt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;直接点击下载地址。或者右键复制连接地址，然后用迅雷下载就行。我就不搞网盘或者上传到哪了。&lt;/p&gt;

&lt;p&gt;如果进入jekyll的404报错界面的话，你就复制连接。我的chrome自动识别了下载地址点击就能下载。&lt;/p&gt;

&lt;p&gt;还是那句话，不喜勿喷。
欢迎留言。&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Feb 2015 21:01:29 +0800</pubDate>
        <link>judi0713.github.io/life/2015/02/24/ppt.html</link>
        <guid isPermaLink="true">judi0713.github.io/life/2015/02/24/ppt.html</guid>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>windows电脑的使用和优化杂谈</title>
        <description>&lt;p&gt;因为上次回学校看见英语老师，他说他电脑慢了…我具体也没看到他电脑什么情况就赶着回家了。现在我把我最近windows上会用的一些优化方法介绍一下（算不上优化，个人使用习惯）。还会介绍一点我在windows经常使用的软件。unix系操作系统还轻喷。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文仅代表个人观点，由于本人技术有限所以只能想到哪说哪，如有得罪还请见谅。如果你是程序员朋友，还请您轻喷这篇文章。如果你是一般用户，选择您觉得适用的参考。
不喜勿喷勿骂。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;优化上，我给别人的意见都是不装360。
因为它捆绑了太多东西，并不是说360不好，确实很影响速度。
不过当年要没有360现在还不知道病毒多疯狂。
如果用360也行，具体参加5。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果你是微软官方纯净的windows操作系统只用kms破解的话我觉得杀毒软件和优化软件没有必要使用。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;平常如果用优化软件就经常清理，一定要时常清理！！我就太懒老不清理每次清理完我觉得都快。我一般大概一个月想起来一次吧…我用的腾讯管家。及时清理就行。有些缓存文件我也不知道在哪怎么删除，但是它能找到删除。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;其他就是一些基本的，桌面上少放点东西及时清理桌面。
还有就是不经常用的软件就及时卸载了，我建议有优化软件的用优化软件卸载。因为清理的相对比较彻底。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;软件的使用上就是同一功能装一个就行，不要装了搜狗输入法再装百度输入法这种。包括优化软件也是这样。包括看视频的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;电脑上的回收站还是要及时清理，我经常性发现C盘存储量飚红，后来发现是回收站东西太多，你也可以设置一下回收站的回收机制。具体我就不介绍了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;有一条很重要，下载软件尽量从官方网站下载。如果你从非官方的地方下载，那你最好确认它是从官方网站找的，我一直觉得我们用的office2013其实很不错，虽然是破解的。但是至少给我感觉很正规，安装选项里面东西很齐全。而且确实需要破解才能用。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最近发现其实内存很影响电脑速度的，尤其我这种喜欢开两个操作系统的。我回来前加了一根4G内存条，现在电脑跑mac的虚拟机基本没有什么太大压力（可惜键盘驱动有问题我的天）。我买的4G内存条好的那种两百多其实感觉还不错。固态硬盘的话，一般我不建议，因为固态硬盘一旦坏了，数据全无。普通硬盘还是可以恢复一部分的。现在制约电脑速度的已经不是cpu了，是硬盘，所以如果电脑慢了，我觉得百分之七八十是电脑装的软件有问题或者有消耗内存的软件在运行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;迅雷的话，我用的是迅雷出的那一款极速版，就只有下载，没有其他的什么广告之类的我觉得还不错。而且如果你电脑上有播放器的话其实没有必要安装迅雷看看什么的。参见5。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;注意右下角的状态栏，一般来说除了系统自带的那些这个显卡那个声卡电源无线网输入法之类的。如果你看到没有什么用的及时关了，这个很影响速度。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果你觉得你可以，我强烈建议你在卡的时候打开任务管理器，看一下内存使用情况和软件使用情况。遇到感觉有问题的就百度一下。一定不要乱关，有把握了再结束任务。比如我用的VMware，至今不知道为什么会有后台运行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;还有一点。安装操作系统，我强烈建议从微软官方的下载光盘镜像来安装操作系统，安装最纯净的操作系统。安装之后kms破解或者买序列号都行。我给我妈的电脑安装的是win7 32位正版操作系统，是学校发的正版序列号和微软官方的镜像。开机有点卡，不过运行起来速度还不错。2G的内存。应该用了至少七八年了吧。去年暑假重装的，我只给她装了火狐和腾讯管家和office2013。我刚刚给老妈装了prezi，然后上网查了点资料，速度还很快。她说就开机慢…开机慢是win7操作系统的问题，win8在很多地方都优化了现在速度还很不错。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;大概就只能想到这么多，基本就几条，少装重复功能的软件，多清理电脑缓存和回收站。&lt;/p&gt;

&lt;p&gt;下面推荐几款软件。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;浏览器：火狐或者chrome或者ie，不推荐360，装了360就用着也没啥哈。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;办公软件：office2013 强推 十分好用 百度一下有一个下载下来是iso文件和kms破解的，特别好用，iso文件打开方式就是解压缩就行了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pdf阅读：adobe reader其实不错，但是一个朋友给我推荐了一款Sumatra PDF，免费开源，而且轻量级，我觉得还不错哈。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;听歌：网易云音乐这个没有任何异议。我知道很多人用酷狗和qq，你尝试一下就会用网易了，它会根据你听的歌给你推荐歌，推荐的神准，简直了！！良心推荐。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下载软件：我用的是迅雷极速版，没有广告没有插件我觉得还不错&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;视频播放器：我用的QQ影音，理由是没有广告，个人比较喜欢下载下来看。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;就写这么多，欢迎和我交流，我近期会把评论功能加上，现在只能给我发邮件了，我的邮箱在左下角。&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Feb 2015 11:29:08 +0800</pubDate>
        <link>judi0713.github.io/windows/2015/02/10/somethingaboutwindows.html</link>
        <guid isPermaLink="true">judi0713.github.io/windows/2015/02/10/somethingaboutwindows.html</guid>
        
        
        <category>windows</category>
        
      </item>
    
      <item>
        <title>Jekyll基本实现写博客功能</title>
        <description>&lt;p&gt;今天又研究了一天jekyll。
现在已经实现这种效果了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/finish-basic-jekyll/finish-basic-jekyll-1.png&quot; alt=&quot;finish-basic-jekyll-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;页面部分我使用的就是jekyll本身的效果没有任何美化的过程。&lt;/p&gt;

&lt;p&gt;大概总结一下有几点我觉得比较重要的。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1.git的使用。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;因为我全程基本上都是在linux下进行操作，所以git用的是全部的命令行。
至于git命令行的使用我还是没有太明白，我觉得多上传几次代码应该就会慢慢熟悉，到时候大概我会将git的基本命令写一个博客出来，还希望到时候有人来访问。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;2.前端知识&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;因为对前端接触较少，所以可能再代码方面是十分不熟悉，所以也只能用原生的模板。
实在是太丑。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;3.Markdown&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;整个jekyll的文章发布是用的Markdown。
我使用了github推出的编辑器atom。
讲句实在话我没觉得atom哪里好用，但是它可以实时预览你的Markdown文件。
因为我想早点发文章出去，所以Markdown的语法基本上没怎么熟悉就直接上了，看上去肯定不美观。但是Markdown确实给我的感觉很好，不复杂，但是很舒服。而且语法上也没有很难。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;4.本地jekyll环境&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;本地jekyll环境的搭建我专门写了一篇博客。一开始觉得没有什么用。后来才发现重要性。
因为在调试的时候需要本地的jekyll环境。命令是jekyll server，可以在本地看一下效果。
这样不用每次修改代码之后都上传预览。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;hello-world&quot;&gt;下面我将对我从hello world改动到现在这个样子进行一个阐述。&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/finish-basic-jekyll/finish-basic-jekyll-2.png&quot; alt=&quot;finish-basic-jekyll-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这是原来的样子。&lt;/p&gt;

&lt;p&gt;首先我打开的是_config.yml&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/finish-basic-jekyll/finish-basic-jekyll-3.png&quot; alt=&quot;finish-basic-jekyll-3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Title对应了博客的名称。
Email就对应了左下方的email。
我将twitter那一行删了…后面我再考虑要不要换成我的微博啥的。
然后description就是右下角那一串字。&lt;/p&gt;

&lt;p&gt;全部修改完毕就会得到我的首页的样子。&lt;/p&gt;

&lt;p&gt;还有右上角的About。
我们打开 about.md，这是Markdown文件了。
修改title会修改about显示的文字，修改里面的内容就可以点击About跳转进去了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/finish-basic-jekyll/finish-basic-jekyll-4.png&quot; alt=&quot;finish-basic-jekyll-4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;还有最后就是我发布的那几篇文章。和posts这个文字的修改。
Posts那个文字修改是在index.html里修改。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/finish-basic-jekyll/finish-basic-jekyll-5.png&quot; alt=&quot;finish-basic-jekyll-5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;发布的所有文章都放在_posts文件夹里。
Jekyll提供了一个例子可以研究一下。
发布就会在首页显示。
我连续发布了三篇所以就显示了~&lt;/p&gt;

&lt;p&gt;怎么发布就需要Markdown的语法了，可以把我博客从github上download下来看看。
不要问我看的谁的我看的迪哥的。&lt;/p&gt;

&lt;p&gt;总之大概就是这样。
后期计划还是要把Markdown的语法研究一下，不然文章看上去太丑了。
还有就是研究一下怎么设置可以评论和查看访问记录。
最后就是美化我的jekyll，不管是修改别人的还是我自己设计。&lt;/p&gt;

&lt;p&gt;总之，前面几篇可能水分有点大，但是这一篇确实可以迅速搭建一个在github上的博客。&lt;/p&gt;

&lt;p&gt;另附我博客的github地址和迪哥博客的github的地址。&lt;/p&gt;

&lt;p&gt;我的&lt;a href=&quot;https://github.com/judi0713/judi0713.github.com&quot;&gt;github.com/judi0713/judi0713.github.com&lt;/a&gt;
迪哥的&lt;a href=&quot;https://github.com/icindy/icindy.github.io&quot;&gt;github.com/icindy/icindy.github.io&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Feb 2015 18:23:10 +0800</pubDate>
        <link>judi0713.github.io/jekyll/2015/02/08/finish-basic-jekyll.html</link>
        <guid isPermaLink="true">judi0713.github.io/jekyll/2015/02/08/finish-basic-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>不利用Jekyllbootstrap上线Jekyll</title>
        <description>&lt;p&gt;因为实在是觉得jekyllbootstrap太丑。而且确实想尝试一下原生的jekyll感觉，于是今天早上重新开始了jekyll的尝试。&lt;/p&gt;

&lt;p&gt;首先是新建一个我的jekyll博客。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/use-jekyll/use-jekyll-1.png&quot; alt=&quot;use-jekyll-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后我们将建好的git仓库clone到本地&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/use-jekyll/use-jekyll-2.png&quot; alt=&quot;use-jekyll-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我不知道怎么将myblog设置为我的git根目录来上传。
然后就利用了笨办法，讲myblog里的所有文件移动到judi0713这个文件夹里。
命令是&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/use-jekyll/use-jekyll-3.png&quot; alt=&quot;use-jekyll-3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;顺便提一下， mv这个命令可以重新命名，重命名的方式就是mv filename1 filename2
mv可以移动文件，批量移动文件的方式就是用*号。
比如我这里使用的，就是可以将myblog的所有文件全部移动，相应的，如果是*.*那么会将myblog的所有文件移动，保留文件夹。&lt;/p&gt;

&lt;p&gt;现在我们已经将jekyll创建的文件全部移动到了git仓库里。
下面就是要将仓库里的文件全部上传了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/use-jekyll/use-jekyll-4.png&quot; alt=&quot;use-jekyll-4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;就是这三条。具体每一条什么含义我大概明白，但是从昨晚上到今天早上我已经被git这几条命令搞的有点晕了。
我全部理清楚之后会专门写一个和git命令行有关的blog的。&lt;/p&gt;

&lt;p&gt;打开&lt;a href=&quot;http://judi0713.github.io/&quot;&gt;judi0713.github.io&lt;/a&gt;已经可以访问了。&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Feb 2015 10:42:08 +0800</pubDate>
        <link>judi0713.github.io/jekyll/2015/02/08/use-jekyll.html</link>
        <guid isPermaLink="true">judi0713.github.io/jekyll/2015/02/08/use-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>利用Jekyllbootstrap开始使用Jekyll</title>
        <description>&lt;p&gt;上次在ubuntu下配置好了jekyll的环境不知道有啥用，都准备放弃了。今天下午睡了一觉觉得不能就这样不了了之。还是需要一个地方记录一下技术路上的点滴。
所以就继续开始我的jekyll之路了。&lt;/p&gt;

&lt;p&gt;提醒！！
建议先看完整篇博客之后再操作！！！！
如果你对照做错了出现问题别怪我….你可以百度，或者google。我已经为了写博客换了两台ubuntu已经很努力了。&lt;/p&gt;

&lt;p&gt;找到了一个网站&lt;a href=&quot;http://jekyllbootstrap.com/&quot;&gt;jekyllbootstrap.com&lt;/a&gt;
Bootstrap是Twitter开源的前端框架。具体怎么用我还在研究。不要嘲笑一个不会前端的人在倒腾他的博客。
总之点击去，然后&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/use-jekyllbootstrap/use-jekyllbootstrap-1.png&quot; alt=&quot;use-jekyllbootstrap-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我点击了左下角的按钮。
然后输入了我的github账号。
按照它的步骤，第一步是创建一个repository&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/use-jekyllbootstrap/use-jekyllbootstrap-2.png&quot; alt=&quot;use-jekyllbootstrap-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不要问我怎么在github上怎么创建repository，右上角”+”。不截图，自行研究…虽然我也是第一次。
然后就是第二步了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/use-jekyllbootstrap/use-jekyllbootstrap-3.png&quot; alt=&quot;use-jekyllbootstrap-3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我打开我的ubuntu（天，为了写博客我开了两个ubuntu！）还好加了内存条。
依次输入命令。（不要忘记在ubuntu下安装git apt-get install git就行了）
别傻不拉几的输入，用复制的，终端下复制方法自行百度。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/use-jekyllbootstrap/use-jekyllbootstrap-4.png&quot; alt=&quot;use-jekyllbootstrap-4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ok，已经将jekyllbootstrap clone到本地了
执行第二步和第三步！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/use-jekyllbootstrap/use-jekyllbootstrap-5.png&quot; alt=&quot;use-jekyllbootstrap-5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一切正常，第四步！
报错了！！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/use-jekyllbootstrap/use-jekyllbootstrap-6.png&quot; alt=&quot;use-jekyllbootstrap-6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;忽略我又换了一台设备因为新设备报错又换了…
反正就是这个publickey的错误。
这个无比蛋疼的错误…百度了半天，在csdn上发现问题所在了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_6b706e15010199p1.html&quot;&gt;blog.sina.com.cn/s/blog_6b706e15010199p1.html&lt;/a&gt;(附上原帖地址)问题原因就是需为github账号添加ssh key。
对照着这篇博客添加了ssh 之后，就ok了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/use-jekyllbootstrap/use-jekyllbootstrap-7.png&quot; alt=&quot;use-jekyllbootstrap-7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ok了。我的天，累死了。主要就是ssh key那一步。
我现在用的是jekyllbootstrap的框架，怎么自己开始一个博客还没太明白。
&lt;a href=&quot;http://judi0713.github.io/&quot;&gt;judi0713.github.io&lt;/a&gt;输入之后 可以看到界面了！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/use-jekyllbootstrap/use-jekyllbootstrap-8.png&quot; alt=&quot;use-jekyllbootstrap-8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;剩下的基本上应该就是前端知识了。到此为止已经可以访问了。
然后可以利用上一篇文章配置的jekyll环境在本地进行调试然后上线了。&lt;/p&gt;

&lt;p&gt;下一步我将研究如何不使用jekyllbootstrap的框架开始使用jekyll。&lt;/p&gt;
</description>
        <pubDate>Sat, 07 Feb 2015 21:25:18 +0800</pubDate>
        <link>judi0713.github.io/jekyll/2015/02/07/use-jekyllbootstrap.html</link>
        <guid isPermaLink="true">judi0713.github.io/jekyll/2015/02/07/use-jekyllbootstrap.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>关于在ubuntu下搭建github的Jekyll环境</title>
        <description>&lt;p&gt;之前早就想有一个自己的博客，但是想自己定制不想用别人的，所以没有选择csdn。用WordPress的话需要服务器又不想花钱。我的师傅(下文和以后的文章和现实当中我都会称呼他迪哥)。迪哥将他的博客移到了github上。虽然github是静态页面，但是对我来说偶尔写写心得也是够用了。
没有仔细研读迪哥的几篇有关jekyll 的博客自己对着文档就上了。
因为后面几天可能还需要windows环境，所以暂时是在windows下跑的ubuntu14.04 32位的虚拟机。
废话结束，开工。&lt;/p&gt;

&lt;p&gt;假设你现在刚刚安装了ubuntu的操作系统。
刚装完ubuntu的同学不要忘记利用sudo apt-get update一下，更新源，不然不能用sudo apt-get安装软件。因为太长时间不用ubuntu所以我忘记了….后来百度才想起来新装的机子需要更新源。&lt;/p&gt;

&lt;p&gt;假设你已经更新源了，那么我们开始下一个步骤。
因为jekyll是需要ruby环境的。
在Mac下自带了ruby环境所以不需要安装ruby，在这我们需要安装ruby。
命令是sudu apt-get install ruby。
声明一下没有截图，但是所有需要的命令我会特别标注的。后面我遇到的问题会截图的。&lt;/p&gt;

&lt;p&gt;在jekyll的官方网站上我们需要用gem来安装jekyll，包括Stack Overflow上的很多网站都说需要sudo apt-get install rubygems。但是如下图，rubygems的包现在已经包含在ruby包里了，这就意味着我们不需要安装gem了，在安装ruby的同时gem已经安装好了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ubuntu-jekyll-environment/ubuntu-jekyll-environment-1.png&quot; alt=&quot;ubuntu-jekyll-environment-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;虽然我磕磕绊绊的到了这一步但是我想一般情况下前面update和安装ruby应该是不会出现什么意外情况的。
之后就是利用gem来安装了。
安装官方文档上写的，此时我们应该进行的操作是gem install jekyll，但是我在输入命令之后出现这个了这个问题。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ubuntu-jekyll-environment/ubuntu-jekyll-environment-2.png&quot; alt=&quot;ubuntu-jekyll-environment-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这是因为gem安装时需要获取最高权限，所以我们使用sudo gem install jekyll&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ubuntu-jekyll-environment/ubuntu-jekyll-environment-3.png&quot; alt=&quot;ubuntu-jekyll-environment-3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;又报错了！！看error部分。出现了 “failed to build gem native extension”
上stackoverflow…完了才知道要安装一个ruby-dev
不太清楚ruby-dev是啥有ruby大神知道的务必教我。但是程序安装都需要dev，我记得好像以前在ubuntu下配置GoAgent的时候装过一个什么dev，在python的时候也装过一个什么什么dev。总之就安装一下呗。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ubuntu-jekyll-environment/ubuntu-jekyll-environment-4.png&quot; alt=&quot;ubuntu-jekyll-environment-4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;安装ruby-dev的速度很快很快很快。
之后就是激动人心的安装jekyll了！！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ubuntu-jekyll-environment/ubuntu-jekyll-environment-5.png&quot; alt=&quot;ubuntu-jekyll-environment-5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;再次执行sudo gem install jekyll已经不报错了，它显示building native extension.
可以很惊喜的发现已经开始安装了啦啦啦啦！！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ubuntu-jekyll-environment/ubuntu-jekyll-environment-6.png&quot; alt=&quot;ubuntu-jekyll-environment-6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;安装速度很快，完毕之后我激动的要开始创建的时候，它又报错了….&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ubuntu-jekyll-environment/ubuntu-jekyll-environment-7.png&quot; alt=&quot;ubuntu-jekyll-environment-7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注意第三行，could not find a javascrit runtime.
继续stackoverflow….
需要nodejs环境，我是前端小白不要问我什么是nodejs，但是我知道在jekyll的官方文档里jekyll是需要nodejs环境的。
接着装吧，希望就在眼前了！！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ubuntu-jekyll-environment/ubuntu-jekyll-environment-8.png&quot; alt=&quot;ubuntu-jekyll-environment-8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;具体安装过程我就不截图了！
至此，整个环境已经全部配好了。&lt;/p&gt;

&lt;p&gt;让我们new一个！！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ubuntu-jekyll-environment/ubuntu-jekyll-environment-9.png&quot; alt=&quot;ubuntu-jekyll-environment-9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jekyll已经成功创建了！历时一个晚上加不到一个早上终于才完成了环境的搭建。相比较去年暑假配置环境的速度这次已经很快了…我现在已经会利用google和stackoverflow搜索这方面的东西了说明这一学期还是学了很多东西的。&lt;/p&gt;

&lt;p&gt;这是整个jekyll环境的配置，第一篇文章，后续我会继续我的github blog搭建之旅。&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Feb 2015 10:58:29 +0800</pubDate>
        <link>judi0713.github.io/jekyll/2015/02/04/ubuntu-jekyll-environment.html</link>
        <guid isPermaLink="true">judi0713.github.io/jekyll/2015/02/04/ubuntu-jekyll-environment.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
